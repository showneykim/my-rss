<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>urn:2022-03-19T01:07:29.338Z</id>
    <title>osmos::feed</title>
    <updated>2022-03-19T01:07:29.338Z</updated>
    <generator>osmosfeed 1.14.4</generator>
    <link rel="alternate" href="index.html"/>
    <entry>
        <title type="html"><![CDATA[Mage - AI로 데이터에서 예측 해주는 도구]]></title>
        <id>https://news.hada.io/topic?id=6186</id>
        <link href="https://news.hada.io/topic?id=6186"/>
        <updated>2022-03-19T00:48:01.000Z</updated>
        <summary type="html"><![CDATA[AI에 대한 지식 없이도 제품 추천, 개인화, 분류 등에 필요한 예측 모델을 구축/훈련/배포 가능한 도구
기본 유스 케이스 제공

Ranking, Churn Prediction, Categorization, Estimation, Customer Life Time Value, Lead Scoring 등
몇줄의 코드만으로 실시간 AI 예측 ...]]></summary>
        <author>
            <name>GeekNews - 개발/기술/스타트업 뉴스 서비스</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Arti 0.1.0 릴리즈 - Rust로 작성한 Tor 클라이언트]]></title>
        <id>https://news.hada.io/topic?id=6185</id>
        <link href="https://news.hada.io/topic?id=6185"/>
        <updated>2022-03-19T00:25:01.000Z</updated>
        <summary type="html"><![CDATA[아직 C로 되어있는 메인 Tor 구현체를 교체할 수준은 아니지만, 이게 미래라고 믿음
고수준 API 는 "대부분 안정적" 이며, 다른 프로젝트에 시험적으로 임베드될 준비가 되었음

호환이 깨지지 않을거라는 보장은 없지만, 특별한 이유없이 고수준 API를 변경하지는 않을 것
...]]></summary>
        <author>
            <name>GeekNews - 개발/기술/스타트업 뉴스 서비스</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Safari 15.4에 추가된 새 WebKit 기능들]]></title>
        <id>https://news.hada.io/topic?id=6184</id>
        <link href="https://news.hada.io/topic?id=6184"/>
        <updated>2022-03-19T00:06:01.000Z</updated>
        <summary type="html"><![CDATA[HTML
img Lazy로딩
dialog, ::backdrop 지원
CSS
:has()
Cascade Layers
contain
뷰포트 : svw,lvh,dvmin 같은 *vw, *vh, *vi, *vb, *vmin, *vmax 지원
:focus-visible
accent-color
calc() : sin, cos...]]></summary>
        <author>
            <name>GeekNews - 개발/기술/스타트업 뉴스 서비스</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Optimizing SVG Patterns to Their Smallest Size]]></title>
        <id>https://css-tricks.com/?p=364090</id>
        <link href="https://css-tricks.com/optimizing-svg-patterns/"/>
        <updated>2022-03-18T22:31:22.000Z</updated>
        <summary type="html"><![CDATA[I recently created a brick wall pattern as part of my #PetitePatterns series, a challenge where I create organic-looking patterns or textures in SVG within 560 bytes (or approximately the size of two tweets). To fit this constraint, I have …
Optimizing SVG Patterns to Their Smallest Size originally published on CSS-Tricks. You should get the newsletter.]]></summary>
        <author>
            <name>Bence Szabó</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[뉴비 PO 첫 2달간 뭐했니?]]></title>
        <id>https://news.hada.io/topic?id=6183</id>
        <link href="https://news.hada.io/topic?id=6183"/>
        <updated>2022-03-18T12:32:44.000Z</updated>
        <summary type="html"><![CDATA[2개월차 PO, 무엇을 도전 했고 어떻게 하고 있나? 삽질은 삽질인데 과연 잘하고 있는 삽질인가?]]></summary>
        <author>
            <name>GeekNews - 개발/기술/스타트업 뉴스 서비스</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Amazon, 10조원($8.5b)에 MGM 인수 완료]]></title>
        <id>https://news.hada.io/topic?id=6182</id>
        <link href="https://news.hada.io/topic?id=6182"/>
        <updated>2022-03-18T03:32:50.000Z</updated>
        <summary type="html"><![CDATA[4000개의 영화와 17000개의 TV 쇼가 아마존 프라임 비디오에 추가

...]]></summary>
        <author>
            <name>GeekNews - 개발/기술/스타트업 뉴스 서비스</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Jest로 Error 검증시 catch 보다는 expect]]></title>
        <id>https://jojoldu.tistory.com/656</id>
        <link href="https://jojoldu.tistory.com/656"/>
        <updated>2022-03-18T01:52:12.000Z</updated>
        <summary type="html"><![CDATA[반응형

                    
                    (adsbygoogle = window.adsbygoogle || []).push({}); 
               

Jest를 통한 테스트를 작성하다보면 Exception에 대한 검증을 작성해야할 때가 있다. 
이럴때 보통 2가지 방법 중 하나를 선택한다.
try ~ catch
expect.rejects.toThrowError
실제 코드로는 다음과 같다.
// try ~ catch
it("[try/catch] 주문금액이 -이면 BadParameter Exception 을 던진다.", async () => {
    try {
        await acceptOrder({amount: -1000});
    } catch (e) {
        expect(e).toBeInstanceOf(BadParameterException);
        expect(e.message).toBe('승인 요청 주문의 금액은 -가 될 수 없습니다');
    }
});

// expect
it("[expect] 주문금액이 -이면 BadParameter Exception 을 던진다.", async () => {
    await expect(async () => {
        await acceptOrder({amount: -1000});
    }).rejects.toThrowError(new BadParameterException('승인 요청 주문의 금액은 -가 될 수 없습니다'));
});
이 중에서 개인적으로는 expect…]]></summary>
        <author>
            <name>향로</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[구글 Universal Analytics 내년부터 지원 중단, Google Analytics 4로 전환하세요]]></title>
        <id>https://news.hada.io/topic?id=6181</id>
        <link href="https://news.hada.io/topic?id=6181"/>
        <updated>2022-03-18T01:47:48.000Z</updated>
        <summary type="html"><![CDATA[2년반 전에 GA4를 출시했고, 2023년부터 이전 세대인 Universal Analytics는 지원을 중단하기 시작할 예정
GA4는 여러 플랫폼에서 작동하며, 쿠키에만 의존하지 않고, 이벤트 기반 모델을 사용하여 사용자 중심 측정을 제공

프라이버시 중점으로 설계. 더 이상 IP주소를 저장하지 않음(GDPR등...]]></summary>
        <author>
            <name>GeekNews - 개발/기술/스타트업 뉴스 서비스</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Microsoft, 윈도우11 파일 탐색기에서 광고를 테스트중]]></title>
        <id>https://news.hada.io/topic?id=6180</id>
        <link href="https://news.hada.io/topic?id=6180"/>
        <updated>2022-03-18T01:32:01.000Z</updated>
        <summary type="html"><![CDATA[윈11 인사이더 빌드의 탐색기에서 다른 마이크로소프트 제품 홍보가 포착됨]]></summary>
        <author>
            <name>GeekNews - 개발/기술/스타트업 뉴스 서비스</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Solito : React Native + Next.js Unified]]></title>
        <id>https://news.hada.io/topic?id=6179</id>
        <link href="https://news.hada.io/topic?id=6179"/>
        <updated>2022-03-18T01:24:47.000Z</updated>
        <summary type="html"><![CDATA[React Native 와 Next.js 를 같이 사용하여 크로스 플랫폼앱을 개발할 수 있도록 도와주는 라이브러리
여러 플랫폼간에 "네비게이션 코드"를 공유 가능하게 만들어 주는 작은 Wrapper 를 제공
패턴과 예제들 포함

...]]></summary>
        <author>
            <name>GeekNews - 개발/기술/스타트업 뉴스 서비스</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[shot-scraper-template - 웹 페이지 스크린샷을 저장하는 GitHub Repo만들기]]></title>
        <id>https://news.hada.io/topic?id=6178</id>
        <link href="https://news.hada.io/topic?id=6178"/>
        <updated>2022-03-18T01:09:08.000Z</updated>
        <summary type="html"><![CDATA[특정 웹페이지의 스크린샷을 자동으로 찍어서 저장하는 GitHub Repo Template
문서화를 위해서 웹사이트의 변경된 내용을 저장하는 용도로 사용
Run workflow 버튼 누르면 스크린샷을 저장
한번에 여러 사이트 캡쳐하기, 레티나 해상도 모드, 캡쳐전 딜레이 지정, PDF로 저장하기 등...]]></summary>
        <author>
            <name>GeekNews - 개발/기술/스타트업 뉴스 서비스</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[2022 Type Trends 보고서 [65p PDF]]]></title>
        <id>https://news.hada.io/topic?id=6177</id>
        <link href="https://news.hada.io/topic?id=6177"/>
        <updated>2022-03-18T00:46:54.000Z</updated>
        <summary type="html"><![CDATA[Neue Nouveau
Svelte Serifs
Loopy
Mix-Up
Organic-Mod
Flux
Throw-Up
It's a Trap!
Certified Gold
NF-Type

...]]></summary>
        <author>
            <name>GeekNews - 개발/기술/스타트업 뉴스 서비스</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[CSS-Tricks is joining DigitalOcean!]]></title>
        <id>https://css-tricks.com/?p=365042</id>
        <link href="https://css-tricks.com/css-tricks-is-joining-digitalocean/"/>
        <updated>2022-03-15T12:18:44.000Z</updated>
        <summary type="html"><![CDATA[Hey hey!
I’ve got a big announcement to make here. (Where’s my gong? I feel like this really needs a good gong hit.)
CSS-Tricks, this very website you’re looking at, has been acquired by DigitalOcean!
You can hear …
CSS-Tricks is joining DigitalOcean! originally published on CSS-Tricks. You should get the newsletter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebStorm (IntelliJ IDEA) 에서 this.cliEngineCtor is not a constructor 이슈 발생시 (feat. ESLint 8.0)]]></title>
        <id>https://jojoldu.tistory.com/655</id>
        <link href="https://jojoldu.tistory.com/655"/>
        <updated>2022-03-13T09:10:35.000Z</updated>
        <summary type="html"><![CDATA[반응형

                    
                    (adsbygoogle = window.adsbygoogle || []).push({}); 
               

ESLint 8.0 이상 버전을 사용할 경우 기존에 사용중인 WebStorm, IntelliJ 등에서 다음과 같이 에러가 발생하곤합니다.
TypeError: this.cliEngineCtor is not a constructor

아래 로그를 보시면 this.cliEngineCtor is not a constructor 내용을 볼 수 있는데요.
TypeError: this.cliEngineCtor is not a constructor
    at ESLintPlugin.invokeESLint (/Users/seojeong-kuk/Library/Application Support/JetBrains/Toolbox/apps/WebStorm/ch-0/211.7628.25/WebStorm.app/Contents/plugins/JavaScriptLanguage/languageService/eslint/bin/eslint-plugin.js:103:25)
    at ESLintPlugin.getErrors (/Users/seojeong-kuk/Library/Application Support/JetBrains/Toolbox/apps/WebStorm/ch-0/211.7628.25/WebStorm.app/Contents/plugins/JavaScriptLanguage/languageService/eslint/bin/eslint-plugin.js:82:21)
    at ESLintPlugin.onMessage (/Users/seojeong-kuk/Library/Application Support/JetBrains/Toolbox/apps/WebStorm/ch-0/211.7628.25/WebStorm.app/Contents/plugins/JavaScriptLanguage/languageService/eslint/bin/eslint-plugin.js:56:64)
    at Interface.<anonymous> (/Users/seojeong-kuk/Library/Application Support/JetBrains/Toolbox/apps/WebStorm/ch-0/211.7628.25/WebStorm.app/Contents/plugins/JavaScriptLanguage/jsLanguageServicesImpl/js-language-service.js:105:39)
    at Interface.emit (node:events:390:28)
    at Interface._onLine (node:readline:487:10)
    at Interface._normalWrite (node:readline:661:12)
    at Socket.ondata (node:readline:269:10)
    at Socket.emit (node:events:390:28)
    at addChunk (node:internal/streams/readable:315:12)
Process finished with exit code -1
이는 ESLint 가 버전업이 됨에 따라 기존 클래스가 삭제되었기 때문인데요.
the-cliengine-class-has-been-removed
그래서 아래와 같이 2021.2.2 보다 낮은 버전에서는 ESLint 8.0 이상의 버전을 사용할 수가 없습니다.
이를 해결 하기 위해서는 2021.2.2 이상의 IDE를 사용하시면 됩니다. 
이미 정식 버전이 2021.3.2 까지 나왔기 때문에 여전히 2021.1 버전을 사용하신다면 얼른 업데이트 하시는 것을 추천드립니다.
참고
ESLint 8.0 support
            
반응형

                    
                    (adsbygoogle = window.adsbygoogle || []).push({});]]></summary>
        <author>
            <name>향로</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[퇴사를 해야겠다고 생각이 들때]]></title>
        <id>https://rastalion.me/?p=2477</id>
        <link href="https://rastalion.me/resign/"/>
        <updated>2022-03-11T17:42:31.000Z</updated>
        <summary type="html"><![CDATA[퇴사의 이유 새로운 직장에 대한 니즈는 한 직장에서 일정기간 업무를 해 왔다면 한 번쯤 생각할 때가 있습니다. 왜 퇴사가 하고 싶을까요? 여러가지 이유가 있지만 각자가 가지고 있는 다양한 가치관에 따라, 또는 지나친 업무량에 따라,...
The post 퇴사를 해야겠다고 생각이 들때 appeared first on RastaLion's IT Blog.]]></summary>
        <author>
            <name>Rasta Lion</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[테스트코드에서 Optional chaining(?.) 쓰지않기]]></title>
        <id>https://jojoldu.tistory.com/643</id>
        <link href="https://jojoldu.tistory.com/643"/>
        <updated>2022-03-08T00:26:46.000Z</updated>
        <summary type="html"><![CDATA[반응형

                    
                    (adsbygoogle = window.adsbygoogle || []).push({}); 
               

여러 포스팅에서 언급한것처럼 테스트 코드는 빠르게 실패를 파악할 수 있어야 한다.
그런면에서 Optional chaining(?.) 은 테스트코드에 적합하지 않다.
MDN의 설명을 가져오면 Optional chaining(?.)은 체이닝 연산자(.) 와 유사하게 작동하지만, 만약 참조가 nullish (null 또는 undefined)이라면, 에러가 발생하는 것 대신에 표현식의 리턴 값을 undefined로 반환한다.
따라서 참조가 누락될 가능성이 있는 경우 연결된 속성으로 접근할 때 더 짧고 간단한 표현식이 생성된다. 
어떤 속성이 필요한지에 대한 보증이 확실하지 않는 경우 객체의 내용을 탐색하는 동안 도움이 될 수 있다.
안정적으로 객체 탐색이 가능하기 때문에 프로덕션 코드에서는 적극적으로 사용하는 편이다. 
하지만 테스트 코드에서는 안정적인 점이 오히려 단점이 된다.
문제
이를 테면 다음과 같이 sut 의 하위에 있는 pay.amount 를 검증한다고 하자. 
이때 Optional chaining(?.) 을 사용한다면 다음과 같다.
it('?가 있는 경우 #1', () => {
    const amount = 0;
    const sut = createOrder(amount);

    expect(sut?.pay?.amount).toBe(amount);
});

class Order {
    p…]]></summary>
        <author>
            <name>향로</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[조건부 (if~else) 로직 테스트코드에서 사용하지 않기]]></title>
        <id>https://jojoldu.tistory.com/642</id>
        <link href="https://jojoldu.tistory.com/642"/>
        <updated>2022-03-07T03:35:43.000Z</updated>
        <summary type="html"><![CDATA[반응형

                    
                    (adsbygoogle = window.adsbygoogle || []).push({}); 
               

테스트 코드는 프로젝트의 생명 주기 보다 길때가 많다. 
기존의 요구사항을 정리한것이 테스트 코드이기 때문에, 메인 코드보다 훨씬 더 읽기쉬워야만 한다.
만약 테스트 코드가 복잡한 경우 어떻게 작동하는지 이해하기가 어렵다. 
그래서 테스트 코드는 주석이 필요 없을 정도로 간단해야 한다.
그런면에서 조건부 (if ~ else) 테스트 로직은 테스트를 실제보다 더 복잡하게 만드는 요인 중 하나다.
이번 글에서는 조건부 로직을 테스트에서 사용한 경우에 어떻게 개선할 수 있을지 알아본다.
1. 가변 결과를 검증하는 경우
1-1. 문제
첫번째 문제는 다음과 같이 테스트 실행때마다 결과가 달라지는 경우이다.
it('[Bad] 가변결과 검증', () => {
    const now = LocalDateTime.now();
    const sut = new TimeDisplay();
    const result = sut.display(now);

    let actual;
    if(now.hour() === 0 && now.minute() === 0) {
        actual = 'Midnight';
    } else if (now.hour() === 12 && now.minute() === 0) {
        actual = 'Noon';
    } else {
        actual = no…]]></summary>
        <author>
            <name>향로</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Github 기능 미리 써보기 (Code Review시 디렉토리 미리보기)]]></title>
        <id>https://jojoldu.tistory.com/641</id>
        <link href="https://jojoldu.tistory.com/641"/>
        <updated>2022-03-05T11:19:36.000Z</updated>
        <summary type="html"><![CDATA[반응형

                    
                    (adsbygoogle = window.adsbygoogle || []).push({}); 
               

Github 에는 앞으로 출시할 기능 (Beta) 을 미리 써볼 수 있는 옵션이 있습니다. 
특히 최근에 Pull Request시 파일 트리를 볼 수 있는 기능이 베타 출시되었는데요. 
코드리뷰시에 굉장히 큰 도움을 주기 때문에 바로 적용해서 써보시는 것을 추천드립니다.
이 포스팅은 2022.03.05에 작성된 것이기 때문에, 소개되는 베타기능들은 이후에 대부분 정식 출시된 상태일 것입니다.
설정
Github 우측 상단의 프로필 아이콘을 클릭하신뒤, Feature preview를 선택합니다.
그럼 아래와 같이 Modal이 나오는데, 이때 원하시는 베타 기능들을 선택하시고 Enable 을 누르시면 됩니다. 
(Enable을 클릭하면 아래와 같이 Disable로 버튼이 변경됩니다.)
저는 여기서 Command Palette 와 Pull Request File Tree를 사용하도록 선택했습니다.
설정하신 후에 새로고침을 해보시면 다음과 같이 Pull Request 화면의 좌측 사이드바에 검색창과 파일/디렉토리가 생긴 것을 볼 수 있습니다.
해당 검색창에서 파일명으로 검색도 가능하며, 파일 클릭시 코드리뷰 화면에서도 바로 해당 파일로 이동이 됩니다.
Command Palette도 적용되어 Command + k (맥 기준) 다음과 같이 Github 웹 사이트에서 커맨드로 여러 액션을 수행할 수 있습니다.
마무리
기존에 Octotree 를 통해서 코드리뷰시 디렉토리와 파일을 보던 입장에서는 아주 환영할만한 기능이 추가되었습니다. 
Github에서 이야기하는 여러 기능들을 미리 볼 수 있는 Feature preview 를 자주 보시면서 신규 기능이 나올때마다 사용해보시면 훨씬 재밌는 Github 경험을 해볼 수 있을것 같습니다.
            
반응형

                    
                    (adsbygoogle = window.adsbygoogle || []).push({});]]></summary>
        <author>
            <name>향로</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Say Hello to selectmenu, a Fully Style-able select Element]]></title>
        <id>https://css-tricks.com/?p=363972</id>
        <link href="https://css-tricks.com/the-selectmenu-element/"/>
        <updated>2022-03-03T15:35:32.000Z</updated>
        <summary type="html"><![CDATA[I want to introduce you to a new, experimental form control called <selectmenu>. We’ll get deep into it, including how much easier it is to style than a traditional <select> element. But first, let’s fill in some context …
Say Hello to selectmenu, a Fully Style-able select Element originally published on CSS-Tricks. You should get the newsletter.]]></summary>
        <author>
            <name>Patrick Brosset</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Build Membership Businesses with Memberful]]></title>
        <id>https://css-tricks.com/?p=364001</id>
        <link href="https://css-tricks.com/build-membership-businesses-with-memberful/"/>
        <updated>2022-03-03T15:33:57.000Z</updated>
        <summary type="html"><![CDATA[(This is a sponsored post.)
What would your business be like if you sold memberships? It might be more than fun to think about, in fact, it might just be transformative. With membership, would you include little add-ons or …
Build Membership Businesses with Memberful originally published on CSS-Tricks. You should get the newsletter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[7 Fresh Links on Performance For March 2022]]></title>
        <id>https://css-tricks.com/?p=364350</id>
        <link href="https://css-tricks.com/performance-links-february-2022/"/>
        <updated>2022-03-02T21:26:50.000Z</updated>
        <summary type="html"><![CDATA[I have a handful of good links to articles about performance that are burning a hole in my bookmarks folder, and wanna drop them here to share.
The new WebPageTest website design
From fonts to SVG: an icon migration strategy
…
7 Fresh Links on Performance For March 2022 originally published on CSS-Tricks. You should get the newsletter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Make a “Raise the Curtains” Effect in CSS]]></title>
        <id>https://css-tricks.com/?p=363882</id>
        <link href="https://css-tricks.com/css-raise-the-curtains-effect/"/>
        <updated>2022-03-02T15:57:32.000Z</updated>
        <summary type="html"><![CDATA[“Raise the curtains” is what I call an effect where the background goes from dark to light on scroll, and the content on top also goes from light to dark while in a sticky position.
Here’s an example where I …
How to Make a “Raise the Curtains” Effect in CSS originally published on CSS-Tricks. You should get the newsletter.]]></summary>
        <author>
            <name>Silvestar Bistrović</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[CSS Custom Highlight API: The Future of Highlighting Text Ranges on the Web]]></title>
        <id>https://css-tricks.com/?p=363724</id>
        <link href="https://css-tricks.com/css-custom-highlight-api-early-loo/"/>
        <updated>2022-03-01T17:41:13.000Z</updated>
        <summary type="html"><![CDATA[Styling ranges of text in software is a very useful thing to be able to do. Thankfully, we have the CSS Custom Highlight API to look forward to because it represents the future of styling text ranges on the web.…
CSS Custom Highlight API: The Future of Highlighting Text Ranges on the Web originally published on CSS-Tricks. You should get the newsletter.]]></summary>
        <author>
            <name>Patrick Brosset</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Ahmad Shadeed: Use Cases For CSS fit-content]]></title>
        <id>https://css-tricks.com/?p=364351</id>
        <link href="https://css-tricks.com/ahmad-shadeed-use-cases-for-css-fit-content/"/>
        <updated>2022-03-01T15:41:16.000Z</updated>
        <summary type="html"><![CDATA[Ahmad Shadeed covers the CSS fit-content sizing keyword. It’s useful! It just doesn’t come up super often. I find myself using min-content a lot more, like when setting up the height of a grid-template-row.
The fit-content keyword is actually …
Ahmad Shadeed: Use Cases For CSS fit-content originally published on CSS-Tricks. You should get the newsletter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[DBeaver에서 java heap space 부족이라고 나올때]]></title>
        <id>https://rastalion.me/?p=2468</id>
        <link href="https://rastalion.me/dbeaver%ec%97%90%ec%84%9c-java-heap-space-%eb%b6%80%ec%a1%b1%ec%9d%b4%eb%9d%bc%ea%b3%a0-%eb%82%98%ec%98%ac%eb%95%8c/"/>
        <updated>2022-03-01T15:22:02.000Z</updated>
        <summary type="html"><![CDATA[DBeaver에서 java heap space 부족이라고 나올때 DB를 관리하는 툴중에 DBeaver라는 툴이 있습니다. 커뮤니티 버전은 프리웨어이기도 하고, 엔터프라이즈 버전은 낮은 가격에도 강력한 부가 기능들이 있어 주로 사용하는 DB툴입니다. DBeaver에서 대용량 테이블을 이관하거나 CSV 파일들의 작업을...
The post DBeaver에서 java heap space 부족이라고 나올때 appeared first on RastaLion's IT Blog.]]></summary>
        <author>
            <name>Rasta Lion</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[루비콘 프로젝트 (랠릿 오픈 프로젝트) 소감]]></title>
        <id>https://jojoldu.tistory.com/640</id>
        <link href="https://jojoldu.tistory.com/640"/>
        <updated>2022-03-01T13:51:53.000Z</updated>
        <summary type="html"><![CDATA[반응형

                    
                    (adsbygoogle = window.adsbygoogle || []).push({}); 
               

랠릿 서비스 를 오픈하고 참여자들의 개인 소감을 다들 작성하는 시간을 가졌다. 
실제 프로젝트의 프로세스 방식, QA 방식등을 전체적인 회고는 내일 (2022.03.02) 진행할 예정인데, 그 전에 각자 어땠는지 소감을 작성하는 시간을 2월에 가졌다.
이번 글은 사내에 공유한 소감글을 블로그로 옮겼다.
루비콘 프로젝트에서 진행한 프로젝트 방식 / 백엔드 프로젝트 방식 등은 TF 회고가 끝나고 올라갈 예정이다. 
이건 프로젝트에 참여한 개인적인 짧은 생각들만 정리했다.
프로젝트 구성원들의 전체 소감은 3월안에 링크로 공유될 예정이다.
일정
프로젝트는 7월에 시작되어, 1월 27일에 정식 오픈하였다. 
중간 투입된 분들은 잘 모르실 수 있지만, 초기에 대표님과 PO 1분이 같이 사용자 스토리 잡는 것이 7월부터였다.
7 ~ 8월: 사용자스토리, 와이어프레임
9월: 디자인 구체화 / 도메인 & 개발환경 설계
10월 ~ 12월: 개발
12월 ~ 1월: QA 및 남은 기능 구현
공식적으로는 약 7개월간 진행된 것이다.
다만, 본격적으로 개발은 9월부터 진행되어 3개월간 개발하여 12월부터 QA를 하게 됐다.
(9월 2일, 3일에 시작된 첫커밋)
개발 기간만 보면 짧았지만, 전체 일정을 보면 결코 짧은 일정은 아니였다. 
7개월이란 시간이 빡빡하게 느껴진 것은 이 기간 안에서 비효율적으로 낭비되는 시간이 많았기 때문이…]]></summary>
        <author>
            <name>향로</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[IE Down, Edge Up… Global Browser Usage Stats Are for Cocktail Parties and Conference Slides]]></title>
        <id>https://css-tricks.com/?p=364346</id>
        <link href="https://css-tricks.com/ie-down-edge-up-global-browser-usage-stats-are-for-cocktail-parties-and-conference-slides/"/>
        <updated>2022-02-28T23:14:29.000Z</updated>
        <summary type="html"><![CDATA[I enjoy articles like Hartley Charlton’s “Microsoft Edge Looks Set to Overtake Safari as World’s Second Most Popular Desktop Browser.” It’s juicy! We know these massive players in the browser market care very much about their market share, so when …
IE Down, Edge Up… Global Browser Usage Stats Are for Cocktail Parties and Conference Slides originally published on CSS-Tricks. You should get the newsletter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Web Component Pseudo-Classes and Pseudo-Elements are Easier Than You Think]]></title>
        <id>https://css-tricks.com/?p=363929</id>
        <link href="https://css-tricks.com/web-component-pseudo-classes-and-pseudo-elements/"/>
        <updated>2022-02-28T15:37:23.000Z</updated>
        <summary type="html"><![CDATA[We’ve discussed a lot about the internals of using CSS in this ongoing series on web components, but there are a few special pseudo-elements and pseudo-classes that, like good friends, willingly smell your possibly halitotic breath before you go …
Web Component Pseudo-Classes and Pseudo-Elements are Easier Than You Think originally published on CSS-Tricks. You should get the newsletter.]]></summary>
        <author>
            <name>John Rhea</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Promise.all 과 Transactions (feat. Node.js)]]></title>
        <id>https://jojoldu.tistory.com/639</id>
        <link href="https://jojoldu.tistory.com/639"/>
        <updated>2022-02-28T14:05:44.000Z</updated>
        <summary type="html"><![CDATA[반응형

                    
                    (adsbygoogle = window.adsbygoogle || []).push({}); 
               

최근 팀에서 코드리뷰를 진행하던 중에 promise.all 과 트랜잭션에 대해 오해하고 있는 부분들을 발견하게 되어 정리하게 되었습니다.
Promise.all (혹은 allSettled)을 사용하면 트랜잭션 내에서도 비동기로 여러 작업들이 동시에 이루어질 수 있다고 오해하는 것인데요. 
실험을 해보면 그게 아니라는 것을 알 수 있습니다.
실제 코드를 가지고 검증해보겠습니다.
모든 실험 결과에 대해서 틀린 내용이 있다면 바로 댓글로 지적해주세요! 
모든 지적은 저의 성장에 많은 도움이 되기 때문에 감사한 마음으로 수정하겠습니다 :)
0. 테스트 환경
테스트할 환경은 다음과 같습니다.
Node.js 16.3.1
PostgreSQL 13.2
모든 코드는 Github 에 있습니다.
1. Promise.all
먼저 promise.all 에 대해서 알아보겠습니다. 
(이미 아시겠지만, 이후 테스트를 설명하기 위한 배경 설명으로 봐주시면 됩니다.)
테스트를 위해 다음과 같이 2개의 함수를 만들겠습니다.
export function sleep(sec) {
    const start = performance.now();
    return new Promise(resolve=>{
        setTimeout(resolve, sec * 1000);
    }).then(() => {
        console.log…]]></summary>
        <author>
            <name>향로</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Trailing Slashes on URLs: Contentious or Settled?]]></title>
        <id>https://css-tricks.com/?p=364070</id>
        <link href="https://css-tricks.com/trailing-slashes-on-urls-contentious-or-settled/"/>
        <updated>2022-02-25T21:13:08.000Z</updated>
        <summary type="html"><![CDATA[A fun deep dive from Zach. Do you have an opinion on which you should use?
1) https://website.com/foo/
2) https://websites.com/foo
The first option has a “trailing slash.” The second does not.
I’ve always preferred this thinking: you use a trailing …
Trailing Slashes on URLs: Contentious or Settled? originally published on CSS-Tricks. You should get the newsletter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[When to Avoid the text-decoration Shorthand Property]]></title>
        <id>https://css-tricks.com/?p=363619</id>
        <link href="https://css-tricks.com/when-to-avoid-css-text-decoration-shorthand/"/>
        <updated>2022-02-25T15:28:33.000Z</updated>
        <summary type="html"><![CDATA[In my recent article about CSS underline bugs in Chrome, I discussed text-decoration-thickness and text-underline-offset, two relatively new and widely-supported CSS properties that give us more control over the styling of underlines.
Let me demonstrate the usefulness of …
When to Avoid the text-decoration Shorthand Property originally published on CSS-Tricks. You should get the newsletter.]]></summary>
        <author>
            <name>Šime Vidas</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Manuel Matuzovic’s CSS Specificity Demo]]></title>
        <id>https://css-tricks.com/?p=364152</id>
        <link href="https://css-tricks.com/manuel-matuzovics-css-specificity-demo/"/>
        <updated>2022-02-25T15:27:19.000Z</updated>
        <summary type="html"><![CDATA[If you’re looking for a primer on CSS specificity, we’ve got that. And if you’re trying to get ahead of the game, you should be aware of CSS Cascade Layers as well.
One of the ways to help get …
Manuel Matuzovic’s CSS Specificity Demo originally published on CSS-Tricks. You should get the newsletter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[My white whale: A use case for will-change]]></title>
        <id>https://css-tricks.com/?p=364138</id>
        <link href="https://css-tricks.com/my-white-whale-a-use-case-for-will-change/"/>
        <updated>2022-02-24T20:59:29.000Z</updated>
        <summary type="html"><![CDATA[Nic Chan:
[…] the will-change property landed in major browsers in August 2015, and I’ve been on the lookout for when to use it ever since. It might seem self-evident to apply it to commonly animated properties such 
…
My white whale: A use case for will-change originally published on CSS-Tricks. You should get the newsletter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Explain the First 10 Lines of Twitter’s Source Code to Me]]></title>
        <id>https://css-tricks.com/?p=363553</id>
        <link href="https://css-tricks.com/explain-the-first-10-lines-of-twitter-source-code/"/>
        <updated>2022-02-24T15:31:55.000Z</updated>
        <summary type="html"><![CDATA[For the past few weeks, I’ve been hiring for a senior full-stack JavaScript engineer at my rental furniture company, Pabio. Since we’re a remote team, we conduct our interviews on Zoom, and I’ve observed that some developers are not …
Explain the First 10 Lines of Twitter’s Source Code to Me originally published on CSS-Tricks. You should get the newsletter.]]></summary>
        <author>
            <name>Anand Chowdhary</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[jest.mock 보다 ts-mockito 사용하기 (feat. Node.js)]]></title>
        <id>https://jojoldu.tistory.com/638</id>
        <link href="https://jojoldu.tistory.com/638"/>
        <updated>2022-02-21T01:33:06.000Z</updated>
        <summary type="html"><![CDATA[반응형

                    
                    (adsbygoogle = window.adsbygoogle || []).push({}); 
               

NodeJS 기반의 백엔드에서는 NestJS, RoutingControllers 등 최근 대세가 되는 MVC 프레임워크들이 모두 Class를 기반으로 한 DI (Dependency Injection) 방식을 사용하고 있다.
그러다보니 Jest의 Mocking 방식은 백엔드 NodeJS 환경에서 적합한 도구는 아닐 수 있다. 
특히, Mock/Stub 객체 생성에 불편한 점이 많다.
그래서 Test Runner로서 Jest는 사용하더라도, Mock 라이브러리는 다른 것을 사용하는 것을 추천하는데, 그 중 대표적인 것들은 다음과 같다.
ts-mockito
sinonjs
jest-mock-extended
이번 글에서는 그 중 ts-mockito 를 통한 테스트 더블 (Mock, Stub 등) 활용법을 알아본다.
1. Jest 와 ts-mockito 비교
먼저 기존 Jest 방식이 왜 불편한지 보자.
Jest로 객체 Mock/Stub 하는것에 대한 불편함만 다룬다. 
이외에는 Jest는 장점이 많은 테스트 프레임워크이다.
테스트할 메인 코드는 다음과 같다.
export class OrderService {
    constructor(
        private readonly orderRepository: OrderRepository,
        ) {
    }

    validateCompletedOr…]]></summary>
        <author>
            <name>향로</name>
        </author>
    </entry>
</feed>