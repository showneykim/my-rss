<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>urn:2022-04-02T01:21:47.222Z</id>
    <title>osmos::feed</title>
    <updated>2022-04-02T01:21:47.222Z</updated>
    <generator>osmosfeed 1.14.4</generator>
    <link rel="alternate" href="index.html"/>
    <entry>
        <title type="html"><![CDATA[Spin - 오픈소스 WebAssembly 프레임워크]]></title>
        <id>https://news.hada.io/topic?id=6286</id>
        <link href="https://news.hada.io/topic?id=6286"/>
        <updated>2022-04-02T01:04:01.000Z</updated>
        <summary type="html"><![CDATA[WASM으로 웹앱, 마이크로서비스, 서버 등을 개발하기 위한 멀티랭귀지 프레임워크

Rust/Go 를 강력히 지원하지만, Python/Ruby/Grain/C++ 등으로도 작성 가능
HTTP 요청등을 간단히 처리하는 인터페이스를 제공
WAGI(WebAssembly Gateway Interface) 모듈과 100% 호환...]]></summary>
        <author>
            <name>GeekNews - 개발/기술/스타트업 뉴스 서비스</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Wacom의 Linux용 Pen과 Tablet지원 현황]]></title>
        <id>https://news.hada.io/topic?id=6285</id>
        <link href="https://news.hada.io/topic?id=6285"/>
        <updated>2022-04-02T00:49:02.000Z</updated>
        <summary type="html"><![CDATA[추천 환경 : GNOME 3 + CentOS 8 / Fedora 35 / Red Hat 8.5 / Ubuntu 20.04]]></summary>
        <author>
            <name>GeekNews - 개발/기술/스타트업 뉴스 서비스</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Postlite - Postgres Wire 호환 SQLite Proxy]]></title>
        <id>https://news.hada.io/topic?id=6284</id>
        <link href="https://news.hada.io/topic?id=6284"/>
        <updated>2022-04-02T00:24:01.000Z</updated>
        <summary type="html"><![CDATA[Postgres Wire 프로토콜을 이용하여 원격 SQLite에 접근 가능하게 하는 프록시
psql/DBeaver/Postico2 같은 Postgres용 GUI 도구로 SQLite를 원격에서 관리 가능
Go 오픈소스

...]]></summary>
        <author>
            <name>GeekNews - 개발/기술/스타트업 뉴스 서비스</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Doomfana - Grafana에서 Doom 실행하기]]></title>
        <id>https://news.hada.io/topic?id=6283</id>
        <link href="https://news.hada.io/topic?id=6283"/>
        <updated>2022-04-02T00:08:01.000Z</updated>
        <summary type="html"><![CDATA[WASM으로 컴파일한 Doom을 Grafana에서 Datasource로 추가하고, 시계열 데이터처럼 렌더링하여 실행

Full/Half 해상도 지원
Half(100x160) 해상도에서 256개의 활성 시계열(색상당 하나 씩) 및 16k 데이터포인트가 30fps 정도로 렌더링
Grafana 사내 해커톤에서 만들어...]]></summary>
        <author>
            <name>GeekNews - 개발/기술/스타트업 뉴스 서비스</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[어떻게 준비하면 인프랩에 입사할 수 있나요.]]></title>
        <id>https://jojoldu.tistory.com/661</id>
        <link href="https://jojoldu.tistory.com/661"/>
        <updated>2022-04-01T17:30:37.000Z</updated>
        <summary type="html"><![CDATA[반응형

                    
                    (adsbygoogle = window.adsbygoogle || []).push({}); 
               


아래는 인프랩의 채용 담당자를 통해 전달받은 메일의 답변을 옮긴것입니다. 
비슷한 메일이 많이 와서 블로그에도 정리하게 되었습니다.

안녕하세요 A님. 
인프랩 개발팀입니다. :)
퇴근하고나서 이메일 주신 내용을 읽어보고나서 답변을 정리해서 전달드립니다.
먼저 오해를 풀고자 하는데요. 
오랫동안 Node.js 백엔드 개발자 채용 공고가 계속 올라가 있는 이유는 원하는 사람의 채용이 안되어서 그런것은 아닙니다 ^^;
저희 같은 IT 기반의 스타트업은 대기업처럼 개발자에 한해서는 TO를 정해놓고 채용을 진행하지 않습니다.
저희가 생각한 인재분이라면 Unlimit으로 채용을 하기 때문에 계속해서 열려있습니다.
구체적으로 말씀드리면,
작년 채용공고를 올리고 현재 6개월정도가 지났습니다.
그 사이에 당시 4명이였던 Node.js 백엔드 개발자팀은 현재 9명이 되었습니다.
그리고 2주뒤에 또 한명의 Node.js 개발자분이 합류하실 예정이라 곧 10명의 팀이 됩니다.
즉, 6~7개월만에 2.5배 인원이 된 것입니다.
그렇지만, 아직도 더 많은 인원을 채용하고자 합니다.
현재 개발팀 규모의 몇배의 인원으로 확장할 계획이고, 아마도 몇년간 채용공고가 내려갈 일은 없을것 같습니다 :)
이건 비단 저희 인프랩만 그런것은 아닙니다.
대부분의 빅테크 스타트업부터 작은 스타트업들까지, 개발자에 한해서는 TO를 정하고 채용하진 않…]]></summary>
        <author>
            <name>향로</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[AWS for Games 공개]]></title>
        <id>https://news.hada.io/topic?id=6282</id>
        <link href="https://news.hada.io/topic?id=6282"/>
        <updated>2022-04-01T01:48:40.000Z</updated>
        <summary type="html"><![CDATA[게임 개발을 돕기위해 AWS 서비스/솔루션/파트너를 얼라인
클라우드 게임 개발, 게임 서버, 게임 보안, 실시간 운영, 게임 분석, 게임 AI & ML

...]]></summary>
        <author>
            <name>GeekNews - 개발/기술/스타트업 뉴스 서비스</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Ask GN: 이번 주말에 뭐 하시나요?]]></title>
        <id>https://news.hada.io/topic?id=6281</id>
        <link href="https://news.hada.io/topic?id=6281"/>
        <updated>2022-04-01T01:35:58.000Z</updated>
        <summary type="html"><![CDATA[이번 주말에 뭘 하려고 계획 중인지 편하게 얘기해 보아요.
읽을 책, 가볼 곳, 해볼 것.. 어떤 것이든 좋습니다.
지난 주말에 계획하셨던 일의 회고도 한번 남겨봐 주세요.]]></summary>
        <author>
            <name>GeekNews - 개발/기술/스타트업 뉴스 서비스</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Redis Stack 공개]]></title>
        <id>https://news.hada.io/topic?id=6280</id>
        <link href="https://news.hada.io/topic?id=6280"/>
        <updated>2022-04-01T01:33:33.000Z</updated>
        <summary type="html"><![CDATA[주요 Redis 모듈들을 단일제품으로 통합하여 Real-Time 어플리케이션 개발을 지원

키/밸류, 문서, 스트림, 그래프 시계열 등의 다양한 데이터
3개의 주요 컴포넌트

Redis Stack Server : Redis + RediSearch, RedisJSON, RedisGraph, RedisTimeSeries, RedisBloom
...]]></summary>
        <author>
            <name>GeekNews - 개발/기술/스타트업 뉴스 서비스</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[10만명의 기술 인터뷰를 분석해서, 최고 성적을 낸 사람들이 일하는 회사를 조사해봤어요]]></title>
        <id>https://news.hada.io/topic?id=6279</id>
        <link href="https://news.hada.io/topic?id=6279"/>
        <updated>2022-04-01T01:04:31.000Z</updated>
        <summary type="html"><![CDATA[익명 기술인터뷰를 진행하는 플랫폼에서 진행한 인터뷰 결과를 분석
총합 : Dropbox > Twitter > Lyft > Uber > Amazon > Google > Bloomberg LP > Facebook > Linkedin > Microsoft
기술 : Dropbox > Bloomberg LP > Twitter > Lyft > Google
...]]></summary>
        <author>
            <name>GeekNews - 개발/기술/스타트업 뉴스 서비스</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Spring 프레임워크 RCE 패치 릴리즈 (CVE-2022-22965)]]></title>
        <id>https://news.hada.io/topic?id=6278</id>
        <link href="https://news.hada.io/topic?id=6278"/>
        <updated>2022-04-01T00:46:50.000Z</updated>
        <summary type="html"><![CDATA[원격코드 실행이 가능한 취약점 패치
Spring 5.3.0 ~ 5.3.17, 5.2.0 ~ 5.2.19 및 그 이전 버전에 해당
조건 : JDK9 이상 + 톰캣 + WAR로 패키징 + spring-webmvc / webflux 의존성이 있는 경우
5.3.18 이나 5.2.20 으로 업그레이드하면 해결
→ 업그레이드 불가능하면, @Cont...]]></summary>
        <author>
            <name>GeekNews - 개발/기술/스타트업 뉴스 서비스</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Supabase, GraphQL 지원 시작]]></title>
        <id>https://news.hada.io/topic?id=6277</id>
        <link href="https://news.hada.io/topic?id=6277"/>
        <updated>2022-04-01T00:36:25.000Z</updated>
        <summary type="html"><![CDATA[몇달전 자신들이 공개한 pg_graphql 오픈소스 기반]]></summary>
        <author>
            <name>GeekNews - 개발/기술/스타트업 뉴스 서비스</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Tricks to Cut Corners Using CSS Mask and Clip-Path Properties]]></title>
        <id>https://css-tricks.com/?p=364279</id>
        <link href="https://css-tricks.com/cut-corners-using-css-mask-and-clip-path-properties/"/>
        <updated>2022-03-30T16:35:08.000Z</updated>
        <summary type="html"><![CDATA[We recently covered creating fancy borders with CSS mask properties, and now we are going to cut the corners with CSS mask and clip-path! A lot of techniques exist to cut different shapes from the corners of any element. …
Tricks to Cut Corners Using CSS Mask and Clip-Path Properties originally published on CSS-Tricks. You should get the newsletter.]]></summary>
        <author>
            <name>Temani Afif</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[6 Useful Bookmarklets to Boost Web Development]]></title>
        <id>https://css-tricks.com/?p=364118</id>
        <link href="https://css-tricks.com/web-development-bookmarklets/"/>
        <updated>2022-03-28T18:15:41.000Z</updated>
        <summary type="html"><![CDATA[A bookmarklet is a JavaScript-based bookmark that adds to a web browser. I’d like to show you some awesome web browser hacks to aid your web development workflow and how to convert those hacks into time-saving bookmarklets.
Activating design mode
…
6 Useful Bookmarklets to Boost Web Development originally published on CSS-Tricks. You should get the newsletter.]]></summary>
        <author>
            <name>Daniel Schwarz</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[공급자 지향 플랫폼]]></title>
        <id>https://jojoldu.tistory.com/660</id>
        <link href="https://jojoldu.tistory.com/660"/>
        <updated>2022-03-28T14:50:28.000Z</updated>
        <summary type="html"><![CDATA[반응형

                    
                    (adsbygoogle = window.adsbygoogle || []).push({}); 
               

요즘 재밌게 보고 있는 웹툰 & 웹소설 중에 네이버 시리즈에 있는 화산귀환이 있다.
웹 소설로 시작해서 그 인기에 힘입어 웹툰으로 나오게 된 작품이다.
웹 소설의 경우 누적 조회수가 2.6억이다. 
네이버 시리즈 최고 히트작 중 하나이다.
처음엔 이 작품을 웹툰으로 시작했다. 
웹툰으로 쭉 보다가 웹 소설로 전향했다. 
이유는 아무리 돈이 있어도 회차가 더 나오지 않아 그 이상 볼 수가 없었기 때문이다.
웹툰에서는 56화밖에 없는 이야기가 웹소설에서는 1183화까지 나와있다. 
그러다보니 다음 이야기가 너무 궁금해서 웹소설로 넘어가서 보고 있다.
그래서 요즘 웹툰은 그냥 작가님을 위한 응원의 마음으로 결제하고, 시간이 될 때마다 웹소설만 본다.
요즘은 굳이 웹툰을 결제해야하나 생각중이다. 
어차피 웹 소설로 다 본 내용이기 때문이다.
이건 참 신기한 일이다. 
웹툰은 컨텐츠를 소비하는 입장으로 장점이 많다.
훨씬 보는 재미가 있다.
훨씬 보기에 편하다.

굳이 글을 다 읽을 필요가 없다
컨텐츠 소비자로서 이만큼 장점이 있음에도 웹소설을 보는게 요즘의 내 모습이라는 것이다.
왜 그럴까 생각해보면 결국 연재주기 때문이라고 생각했다.
웹툰은 1주일에 1회도 어렵다.
(작가님들을 위한 정기휴재는 이제 웹툰에서는 거의 필수로 적용된다)
반면 웹소설은 1주일에 5~7회를 연재한다. 
웬만해서는 휴재도 잘 나지 않는다.…]]></summary>
        <author>
            <name>향로</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Github Action 빌드 결과 Telegram Bot으로 보내기]]></title>
        <id>https://jojoldu.tistory.com/659</id>
        <link href="https://jojoldu.tistory.com/659"/>
        <updated>2022-03-26T12:33:19.000Z</updated>
        <summary type="html"><![CDATA[반응형

                    
                    (adsbygoogle = window.adsbygoogle || []).push({}); 
               

팀 단위의 프로젝트에서는 Github Action 빌드의 결과를 Slack으로 보내겠지만, 
개인적인 프로젝트에서는 Telegram을 사용할 때가 많다.
메세지 제한이 없고

슬랙은 무료 Plan에서는 채널당 메세지가 10,000개 제한이 있다.
네이티브 앱이라 슬랙에 비해 속도 체감이 심하다
특정 프로젝트의 build 결과를 텔레그램 메신저로 받을 수 있도록 진행한다.
1. bot 생성
먼저 텔레그램 봇을 생성한다.
텔레그램 메신저로 이동하여 BotFather 를 찾는다.
아래와 같이 BotFather 채팅방에서 /newbot을 입력한다
그리고 나선 봇 이름을 등록한다.
봇 이름은 다음과 같은 규칙이 필요하다
XXXBot 혹은 XXX_bot 과 같이 마지막 뒤에 Bot 혹은 _bot 이 들어가야만한다
생성이 완료되었다면, 여기서 끝이 아니고 2개의 값을 가져와야 한다
텔레그램 봇 토큰
텔래그램 봇 채팅방 ID
정상적으로 생성되었다면 위 이미지의 회색 박스처럼 Token 이 나온다. 
이는 잠깐 두고, 
생성된 Bot 채팅방으로 이동해서 간단하게 메세지를 하나 보낸다.
이 메세지를 보내고 나면 이제 텔레그램 API를 통해 채팅방 ID를 가져올 수 있다.
아래 API로 생성된 토큰을 넣어 호출해본다. 
(HTTP Get 요청이라 브라우저에서 직접 입력해도 된다.)
https://api.telegram.org/…]]></summary>
        <author>
            <name>향로</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[내가 틀렸네요]]></title>
        <id>https://jojoldu.tistory.com/658</id>
        <link href="https://jojoldu.tistory.com/658"/>
        <updated>2022-03-25T14:22:57.000Z</updated>
        <summary type="html"><![CDATA[반응형

                    
                    (adsbygoogle = window.adsbygoogle || []).push({}); 
               


팀에 공유한 내용인데 블로그에도 정리한다.
오늘 주변의 추천으로 희종님의 글을 봤다.
https://ahnheejong.name/articles/i-was-wrong-test/
예전에 어느책에서 봤던 내용인데 (제목은 까먹었다 ㅠㅠ) 
나 스스로 "내가 틀렸네요" 라고 입밖으로 낼 수 있는 용기가 있다면 그사람은 성장하는중이다 라는 이야기를 본적이 있다.
그래서 그 이후로 
"제가 잘못알고 있었네요" 
라고 이야기를 해야하는 순간이 오면 진짜 민망하고, 인정하기 싫었지만, 
"그래도 이걸 이야기하지 않으면 나는 성장하지 못하겠지? 그게 더 무서운거 아닌가?" 
라는 생각으로 어떻게든 내뱉었다.
어떤 일을 하는데 있어 개인이 성장하려면 내가 틀렸음을 인정하고, 이걸 입밖으로 낼 용기를 가지는 것이 필요하다.
이걸 자주 하지 않으면 더이상 주변의 사람들이 부족한점/잘못한점/틀린점에 대해 이야기하지 않게 된다.
어차피 얘기해줘도 인정하지 않을것이고, 변하지도 않을텐데 굳이 감정상하고 싶진 않아서 그렇다.
그렇게 될수록 점점 본인만의 세상에 갇히거나(흔히 말하는 꼰대) 더이상 성장하지 못하는 사람이 된다.
1년에 몇번이나 내가 틀렸음을 이야기했는지
가장 최근에 “너 그거 틀렸어” 피드백을 언제 받았는지
등을 정기적으로 검토해보면 좋다.
특히 일기 쓰면 정말 좋다.
마침 왓챠의 채용공고에 적힌 같이 일하고 싶은 동료 이야기가 보인다.
가장 최근에 "내가 틀렸네요" 라는 말은 언제했는지 찾아봤더니, 
최근에 내가 가이드한 방향이 너무 예전 지식이라 새 방향을 지적받을때 이야기 했었다. 
그 동료에게 정말 감사하다.
희종님의 글 덕분에 다시 한번 "내가 틀렸네요"의 힘을 상기시킬 수 있어서 너무 감사드리고 싶다.
            
반응형

                    
                    (adsbygoogle = window.adsbygoogle || []).push({});]]></summary>
        <author>
            <name>향로</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[CloudFlare Pages로 Next.js 서비스 배포하기]]></title>
        <id>https://jojoldu.tistory.com/657</id>
        <link href="https://jojoldu.tistory.com/657"/>
        <updated>2022-03-25T01:15:44.000Z</updated>
        <summary type="html"><![CDATA[반응형

                    
                    (adsbygoogle = window.adsbygoogle || []).push({}); 
               

CloudFlare의 정적사이트 플랫폼인 CloudFlare Pages가 출시되었다.
https://pages.cloudflare.com/
이미 Netlify 와 같이 정적 사이트 플랫폼이 많은데 굳이 CloudFlare를 써야하나? 싶었다. 
(저도 그동안은 Netlify을 썼기 때문에)
그럼에도 써봐야하는 이유는 Free Plan의 구성이 말도 안되게 좋기 때문이다.
무제한 사이트 발행
무제한 요청
무제한 대역폭
Free Plan 라고는 믿을수 없을만큼의 좋은 혜택을 제공한다. 
대부분의 정적 사이트가 저정도 혜택은 유료 Plan인걸 고려하면 선택하지 않을 이유가 전혀 없다고 생각했다.
1. Next.js App 생성
먼저 간단한 Next.js App을 생성한다.
여기서 사용된 코드는 모두 Github 에 있다.
npx create-next-app react-in-action --use-npm --example "https://github.com/vercel/next-learn/tree/master/basics/learn-starter"
react-in-action 으로 프로젝트를 생성한다.
이렇게 생성된 샘플 프로젝트에 아래 2가지 설정을 추가한다.
1-1. export 추가
생성된 프로젝트의 package.json 을 열어서 아래와 같이 build 에 next export 를 추가한다
{
  "pri…]]></summary>
        <author>
            <name>향로</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Write HTML, the HTML Way (Not the XHTML Way)]]></title>
        <id>https://css-tricks.com/?p=363745</id>
        <link href="https://css-tricks.com/write-html-the-html-way-not-the-xhtml-way/"/>
        <updated>2022-03-21T20:08:38.000Z</updated>
        <summary type="html"><![CDATA[You may not use XHTML (anymore), but when you write HTML, you may be more influenced by XHTML than you think. You are very likely writing HTML, the XHTML way.
What is the XHTML way of writing HTML, and what …
Write HTML, the HTML Way (Not the XHTML Way) originally published on CSS-Tricks. You should get the newsletter.]]></summary>
        <author>
            <name>Jens Oliver Meiert</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Optimizing SVG Patterns to Their Smallest Size]]></title>
        <id>https://css-tricks.com/?p=364090</id>
        <link href="https://css-tricks.com/optimizing-svg-patterns/"/>
        <updated>2022-03-18T22:31:22.000Z</updated>
        <summary type="html"><![CDATA[I recently created a brick wall pattern as part of my #PetitePatterns series, a challenge where I create organic-looking patterns or textures in SVG within 560 bytes (or approximately the size of two tweets). To fit this constraint, I have …
Optimizing SVG Patterns to Their Smallest Size originally published on CSS-Tricks. You should get the newsletter.]]></summary>
        <author>
            <name>Bence Szabó</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Jest로 Error 검증시 catch 보다는 expect]]></title>
        <id>https://jojoldu.tistory.com/656</id>
        <link href="https://jojoldu.tistory.com/656"/>
        <updated>2022-03-18T01:52:12.000Z</updated>
        <summary type="html"><![CDATA[반응형

                    
                    (adsbygoogle = window.adsbygoogle || []).push({}); 
               

Jest를 통한 테스트를 작성하다보면 Exception에 대한 검증을 작성해야할 때가 있다. 
이럴때 보통 2가지 방법 중 하나를 선택한다.
try ~ catch
expect.rejects.toThrowError
실제 코드로는 다음과 같다.
// try ~ catch
it("[try/catch] 주문금액이 -이면 BadParameter Exception 을 던진다.", async () => {
    try {
        await acceptOrder({amount: -1000});
    } catch (e) {
        expect(e).toBeInstanceOf(BadParameterException);
        expect(e.message).toBe('승인 요청 주문의 금액은 -가 될 수 없습니다');
    }
});

// expect
it("[expect] 주문금액이 -이면 BadParameter Exception 을 던진다.", async () => {
    await expect(async () => {
        await acceptOrder({amount: -1000});
    }).rejects.toThrowError(new BadParameterException('승인 요청 주문의 금액은 -가 될 수 없습니다'));
});
이 중에서 개인적으로는 expect…]]></summary>
        <author>
            <name>향로</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[CSS-Tricks is joining DigitalOcean!]]></title>
        <id>https://css-tricks.com/?p=365042</id>
        <link href="https://css-tricks.com/css-tricks-is-joining-digitalocean/"/>
        <updated>2022-03-15T12:18:44.000Z</updated>
        <summary type="html"><![CDATA[Hey hey!
I’ve got a big announcement to make here. (Where’s my gong? I feel like this really needs a good gong hit.)
CSS-Tricks, this very website you’re looking at, has been acquired by DigitalOcean!
You can hear …
CSS-Tricks is joining DigitalOcean! originally published on CSS-Tricks. You should get the newsletter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebStorm (IntelliJ IDEA) 에서 this.cliEngineCtor is not a constructor 이슈 발생시 (feat. ESLint 8.0)]]></title>
        <id>https://jojoldu.tistory.com/655</id>
        <link href="https://jojoldu.tistory.com/655"/>
        <updated>2022-03-13T09:10:35.000Z</updated>
        <summary type="html"><![CDATA[반응형

                    
                    (adsbygoogle = window.adsbygoogle || []).push({}); 
               

ESLint 8.0 이상 버전을 사용할 경우 기존에 사용중인 WebStorm, IntelliJ 등에서 다음과 같이 에러가 발생하곤합니다.
TypeError: this.cliEngineCtor is not a constructor

아래 로그를 보시면 this.cliEngineCtor is not a constructor 내용을 볼 수 있는데요.
TypeError: this.cliEngineCtor is not a constructor
    at ESLintPlugin.invokeESLint (/Users/seojeong-kuk/Library/Application Support/JetBrains/Toolbox/apps/WebStorm/ch-0/211.7628.25/WebStorm.app/Contents/plugins/JavaScriptLanguage/languageService/eslint/bin/eslint-plugin.js:103:25)
    at ESLintPlugin.getErrors (/Users/seojeong-kuk/Library/Application Support/JetBrains/Toolbox/apps/WebStorm/ch-0/211.7628.25/WebStorm.app/Contents/plugins/JavaScriptLanguage/languageService/eslint/bin/eslint-plugin.js:82:21)
    at ESLintPlugin.onMessage (/Users/seojeong-kuk/Library/Application Support/JetBrains/Toolbox/apps/WebStorm/ch-0/211.7628.25/WebStorm.app/Contents/plugins/JavaScriptLanguage/languageService/eslint/bin/eslint-plugin.js:56:64)
    at Interface.<anonymous> (/Users/seojeong-kuk/Library/Application Support/JetBrains/Toolbox/apps/WebStorm/ch-0/211.7628.25/WebStorm.app/Contents/plugins/JavaScriptLanguage/jsLanguageServicesImpl/js-language-service.js:105:39)
    at Interface.emit (node:events:390:28)
    at Interface._onLine (node:readline:487:10)
    at Interface._normalWrite (node:readline:661:12)
    at Socket.ondata (node:readline:269:10)
    at Socket.emit (node:events:390:28)
    at addChunk (node:internal/streams/readable:315:12)
Process finished with exit code -1
이는 ESLint 가 버전업이 됨에 따라 기존 클래스가 삭제되었기 때문인데요.
the-cliengine-class-has-been-removed
그래서 아래와 같이 2021.2.2 보다 낮은 버전에서는 ESLint 8.0 이상의 버전을 사용할 수가 없습니다.
이를 해결 하기 위해서는 2021.2.2 이상의 IDE를 사용하시면 됩니다. 
이미 정식 버전이 2021.3.2 까지 나왔기 때문에 여전히 2021.1 버전을 사용하신다면 얼른 업데이트 하시는 것을 추천드립니다.
참고
ESLint 8.0 support
            
반응형

                    
                    (adsbygoogle = window.adsbygoogle || []).push({});]]></summary>
        <author>
            <name>향로</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[퇴사를 해야겠다고 생각이 들때]]></title>
        <id>https://rastalion.me/?p=2477</id>
        <link href="https://rastalion.me/resign/"/>
        <updated>2022-03-11T17:42:31.000Z</updated>
        <summary type="html"><![CDATA[퇴사의 이유 새로운 직장에 대한 니즈는 한 직장에서 일정기간 업무를 해 왔다면 한 번쯤 생각할 때가 있습니다. 왜 퇴사가 하고 싶을까요? 여러가지 이유가 있지만 각자가 가지고 있는 다양한 가치관에 따라, 또는 지나친 업무량에 따라,...
The post 퇴사를 해야겠다고 생각이 들때 appeared first on RastaLion's IT Blog.]]></summary>
        <author>
            <name>Rasta Lion</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[테스트코드에서 Optional chaining(?.) 쓰지않기]]></title>
        <id>https://jojoldu.tistory.com/643</id>
        <link href="https://jojoldu.tistory.com/643"/>
        <updated>2022-03-08T00:26:46.000Z</updated>
        <summary type="html"><![CDATA[반응형

                    
                    (adsbygoogle = window.adsbygoogle || []).push({}); 
               

여러 포스팅에서 언급한것처럼 테스트 코드는 빠르게 실패를 파악할 수 있어야 한다.
그런면에서 Optional chaining(?.) 은 테스트코드에 적합하지 않다.
MDN의 설명을 가져오면 Optional chaining(?.)은 체이닝 연산자(.) 와 유사하게 작동하지만, 만약 참조가 nullish (null 또는 undefined)이라면, 에러가 발생하는 것 대신에 표현식의 리턴 값을 undefined로 반환한다.
따라서 참조가 누락될 가능성이 있는 경우 연결된 속성으로 접근할 때 더 짧고 간단한 표현식이 생성된다. 
어떤 속성이 필요한지에 대한 보증이 확실하지 않는 경우 객체의 내용을 탐색하는 동안 도움이 될 수 있다.
안정적으로 객체 탐색이 가능하기 때문에 프로덕션 코드에서는 적극적으로 사용하는 편이다. 
하지만 테스트 코드에서는 안정적인 점이 오히려 단점이 된다.
문제
이를 테면 다음과 같이 sut 의 하위에 있는 pay.amount 를 검증한다고 하자. 
이때 Optional chaining(?.) 을 사용한다면 다음과 같다.
it('?가 있는 경우 #1', () => {
    const amount = 0;
    const sut = createOrder(amount);

    expect(sut?.pay?.amount).toBe(amount);
});

class Order {
    p…]]></summary>
        <author>
            <name>향로</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[조건부 (if~else) 로직 테스트코드에서 사용하지 않기]]></title>
        <id>https://jojoldu.tistory.com/642</id>
        <link href="https://jojoldu.tistory.com/642"/>
        <updated>2022-03-07T03:35:43.000Z</updated>
        <summary type="html"><![CDATA[반응형

                    
                    (adsbygoogle = window.adsbygoogle || []).push({}); 
               

테스트 코드는 프로젝트의 생명 주기 보다 길때가 많다. 
기존의 요구사항을 정리한것이 테스트 코드이기 때문에, 메인 코드보다 훨씬 더 읽기쉬워야만 한다.
만약 테스트 코드가 복잡한 경우 어떻게 작동하는지 이해하기가 어렵다. 
그래서 테스트 코드는 주석이 필요 없을 정도로 간단해야 한다.
그런면에서 조건부 (if ~ else) 테스트 로직은 테스트를 실제보다 더 복잡하게 만드는 요인 중 하나다.
이번 글에서는 조건부 로직을 테스트에서 사용한 경우에 어떻게 개선할 수 있을지 알아본다.
1. 가변 결과를 검증하는 경우
1-1. 문제
첫번째 문제는 다음과 같이 테스트 실행때마다 결과가 달라지는 경우이다.
it('[Bad] 가변결과 검증', () => {
    const now = LocalDateTime.now();
    const sut = new TimeDisplay();
    const result = sut.display(now);

    let actual;
    if(now.hour() === 0 && now.minute() === 0) {
        actual = 'Midnight';
    } else if (now.hour() === 12 && now.minute() === 0) {
        actual = 'Noon';
    } else {
        actual = no…]]></summary>
        <author>
            <name>향로</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Github 기능 미리 써보기 (Code Review시 디렉토리 미리보기)]]></title>
        <id>https://jojoldu.tistory.com/641</id>
        <link href="https://jojoldu.tistory.com/641"/>
        <updated>2022-03-05T11:19:36.000Z</updated>
        <summary type="html"><![CDATA[반응형

                    
                    (adsbygoogle = window.adsbygoogle || []).push({}); 
               

Github 에는 앞으로 출시할 기능 (Beta) 을 미리 써볼 수 있는 옵션이 있습니다. 
특히 최근에 Pull Request시 파일 트리를 볼 수 있는 기능이 베타 출시되었는데요. 
코드리뷰시에 굉장히 큰 도움을 주기 때문에 바로 적용해서 써보시는 것을 추천드립니다.
이 포스팅은 2022.03.05에 작성된 것이기 때문에, 소개되는 베타기능들은 이후에 대부분 정식 출시된 상태일 것입니다.
설정
Github 우측 상단의 프로필 아이콘을 클릭하신뒤, Feature preview를 선택합니다.
그럼 아래와 같이 Modal이 나오는데, 이때 원하시는 베타 기능들을 선택하시고 Enable 을 누르시면 됩니다. 
(Enable을 클릭하면 아래와 같이 Disable로 버튼이 변경됩니다.)
저는 여기서 Command Palette 와 Pull Request File Tree를 사용하도록 선택했습니다.
설정하신 후에 새로고침을 해보시면 다음과 같이 Pull Request 화면의 좌측 사이드바에 검색창과 파일/디렉토리가 생긴 것을 볼 수 있습니다.
해당 검색창에서 파일명으로 검색도 가능하며, 파일 클릭시 코드리뷰 화면에서도 바로 해당 파일로 이동이 됩니다.
Command Palette도 적용되어 Command + k (맥 기준) 다음과 같이 Github 웹 사이트에서 커맨드로 여러 액션을 수행할 수 있습니다.
마무리
기존에 Octotree 를 통해서 코드리뷰시 디렉토리와 파일을 보던 입장에서는 아주 환영할만한 기능이 추가되었습니다. 
Github에서 이야기하는 여러 기능들을 미리 볼 수 있는 Feature preview 를 자주 보시면서 신규 기능이 나올때마다 사용해보시면 훨씬 재밌는 Github 경험을 해볼 수 있을것 같습니다.
            
반응형

                    
                    (adsbygoogle = window.adsbygoogle || []).push({});]]></summary>
        <author>
            <name>향로</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Say Hello to selectmenu, a Fully Style-able select Element]]></title>
        <id>https://css-tricks.com/?p=363972</id>
        <link href="https://css-tricks.com/the-selectmenu-element/"/>
        <updated>2022-03-03T15:35:32.000Z</updated>
        <summary type="html"><![CDATA[I want to introduce you to a new, experimental form control called <selectmenu>. We’ll get deep into it, including how much easier it is to style than a traditional <select> element. But first, let’s fill in some context …
Say Hello to selectmenu, a Fully Style-able select Element originally published on CSS-Tricks. You should get the newsletter.]]></summary>
        <author>
            <name>Patrick Brosset</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Build Membership Businesses with Memberful]]></title>
        <id>https://css-tricks.com/?p=364001</id>
        <link href="https://css-tricks.com/build-membership-businesses-with-memberful/"/>
        <updated>2022-03-03T15:33:57.000Z</updated>
        <summary type="html"><![CDATA[(This is a sponsored post.)
What would your business be like if you sold memberships? It might be more than fun to think about, in fact, it might just be transformative. With membership, would you include little add-ons or …
Build Membership Businesses with Memberful originally published on CSS-Tricks. You should get the newsletter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
</feed>