{
  "sources": [
    {
      "title": "CSS-Tricks",
      "feedUrl": "https://css-tricks.com/feed/",
      "siteUrl": "https://css-tricks.com",
      "articles": [
        {
          "id": "https://css-tricks.com/?p=363972",
          "author": "Patrick Brosset",
          "description": "I want to introduce you to a new, experimental form control called <selectmenu>. We’ll get deep into it, including how much easier it is to style than a traditional <select> element. But first, let’s fill in some context …\nSay Hello to selectmenu, a Fully Style-able select Element originally published on CSS-Tricks. You should get the newsletter.",
          "link": "https://css-tricks.com/the-selectmenu-element/",
          "publishedOn": "2022-03-03T15:35:32.000Z",
          "wordCount": 3033,
          "title": "Say Hello to selectmenu, a Fully Style-able select Element",
          "imageUrl": "https://css-tricks.com/wp-json/social-image-generator/v1/image/363972"
        },
        {
          "id": "https://css-tricks.com/?p=364001",
          "author": "Chris Coyier",
          "description": "(This is a sponsored post.)\nWhat would your business be like if you sold memberships? It might be more than fun to think about, in fact, it might just be transformative. With membership, would you include little add-ons or …\nBuild Membership Businesses with Memberful originally published on CSS-Tricks. You should get the newsletter.",
          "link": "https://css-tricks.com/build-membership-businesses-with-memberful/",
          "publishedOn": "2022-03-03T15:33:57.000Z",
          "wordCount": 883,
          "title": "Build Membership Businesses with Memberful",
          "imageUrl": "https://css-tricks.com/wp-json/social-image-generator/v1/image/364001"
        },
        {
          "id": "https://css-tricks.com/?p=364350",
          "author": "Chris Coyier",
          "description": "I have a handful of good links to articles about performance that are burning a hole in my bookmarks folder, and wanna drop them here to share.\nThe new WebPageTest website design\nFrom fonts to SVG: an icon migration strategy\n…\n7 Fresh Links on Performance For March 2022 originally published on CSS-Tricks. You should get the newsletter.",
          "link": "https://css-tricks.com/performance-links-february-2022/",
          "publishedOn": "2022-03-02T21:26:50.000Z",
          "wordCount": 839,
          "title": "7 Fresh Links on Performance For March 2022",
          "imageUrl": "https://css-tricks.com/wp-json/social-image-generator/v1/image/364350"
        },
        {
          "id": "https://css-tricks.com/?p=363882",
          "author": "Silvestar Bistrović",
          "description": "“Raise the curtains” is what I call an effect where the background goes from dark to light on scroll, and the content on top also goes from light to dark while in a sticky position.\nHere’s an example where I …\nHow to Make a “Raise the Curtains” Effect in CSS originally published on CSS-Tricks. You should get the newsletter.",
          "link": "https://css-tricks.com/css-raise-the-curtains-effect/",
          "publishedOn": "2022-03-02T15:57:32.000Z",
          "wordCount": 1300,
          "title": "How to Make a “Raise the Curtains” Effect in CSS",
          "imageUrl": "https://css-tricks.com/wp-json/social-image-generator/v1/image/363882"
        },
        {
          "id": "https://css-tricks.com/?p=363724",
          "author": "Patrick Brosset",
          "description": "Styling ranges of text in software is a very useful thing to be able to do. Thankfully, we have the CSS Custom Highlight API to look forward to because it represents the future of styling text ranges on the web.…\nCSS Custom Highlight API: The Future of Highlighting Text Ranges on the Web originally published on CSS-Tricks. You should get the newsletter.",
          "link": "https://css-tricks.com/css-custom-highlight-api-early-loo/",
          "publishedOn": "2022-03-01T17:41:13.000Z",
          "wordCount": 2573,
          "title": "CSS Custom Highlight API: The Future of Highlighting Text Ranges on the Web",
          "imageUrl": "https://css-tricks.com/wp-json/social-image-generator/v1/image/363724"
        },
        {
          "id": "https://css-tricks.com/?p=364351",
          "author": "Chris Coyier",
          "description": "Ahmad Shadeed covers the CSS fit-content sizing keyword. It’s useful! It just doesn’t come up super often. I find myself using min-content a lot more, like when setting up the height of a grid-template-row.\nThe fit-content keyword is actually …\nAhmad Shadeed: Use Cases For CSS fit-content originally published on CSS-Tricks. You should get the newsletter.",
          "link": "https://css-tricks.com/ahmad-shadeed-use-cases-for-css-fit-content/",
          "publishedOn": "2022-03-01T15:41:16.000Z",
          "wordCount": 434,
          "title": "Ahmad Shadeed: Use Cases For CSS fit-content",
          "imageUrl": "https://css-tricks.com/wp-json/social-image-generator/v1/image/364351"
        },
        {
          "id": "https://css-tricks.com/?p=364346",
          "author": "Chris Coyier",
          "description": "I enjoy articles like Hartley Charlton’s “Microsoft Edge Looks Set to Overtake Safari as World’s Second Most Popular Desktop Browser.” It’s juicy! We know these massive players in the browser market care very much about their market share, so when …\nIE Down, Edge Up… Global Browser Usage Stats Are for Cocktail Parties and Conference Slides originally published on CSS-Tricks. You should get the newsletter.",
          "link": "https://css-tricks.com/ie-down-edge-up-global-browser-usage-stats-are-for-cocktail-parties-and-conference-slides/",
          "publishedOn": "2022-02-28T23:14:29.000Z",
          "wordCount": 939,
          "title": "IE Down, Edge Up… Global Browser Usage Stats Are for Cocktail Parties and Conference Slides",
          "imageUrl": "https://css-tricks.com/wp-json/social-image-generator/v1/image/364346"
        },
        {
          "id": "https://css-tricks.com/?p=363929",
          "author": "John Rhea",
          "description": "We’ve discussed a lot about the internals of using CSS in this ongoing series on web components, but there are a few special pseudo-elements and pseudo-classes that, like good friends, willingly smell your possibly halitotic breath before you go …\nWeb Component Pseudo-Classes and Pseudo-Elements are Easier Than You Think originally published on CSS-Tricks. You should get the newsletter.",
          "link": "https://css-tricks.com/web-component-pseudo-classes-and-pseudo-elements/",
          "publishedOn": "2022-02-28T15:37:23.000Z",
          "wordCount": 2477,
          "title": "Web Component Pseudo-Classes and Pseudo-Elements are Easier Than You Think",
          "imageUrl": "https://css-tricks.com/wp-json/social-image-generator/v1/image/363929"
        },
        {
          "id": "https://css-tricks.com/?p=364070",
          "author": "Chris Coyier",
          "description": "A fun deep dive from Zach. Do you have an opinion on which you should use?\n1) https://website.com/foo/\n2) https://websites.com/foo\nThe first option has a “trailing slash.” The second does not.\nI’ve always preferred this thinking: you use a trailing …\nTrailing Slashes on URLs: Contentious or Settled? originally published on CSS-Tricks. You should get the newsletter.",
          "link": "https://css-tricks.com/trailing-slashes-on-urls-contentious-or-settled/",
          "publishedOn": "2022-02-25T21:13:08.000Z",
          "wordCount": 846,
          "title": "Trailing Slashes on URLs: Contentious or Settled?",
          "imageUrl": "https://css-tricks.com/wp-json/social-image-generator/v1/image/364070"
        },
        {
          "id": "https://css-tricks.com/?p=363619",
          "author": "Šime Vidas",
          "description": "In my recent article about CSS underline bugs in Chrome, I discussed text-decoration-thickness and text-underline-offset, two relatively new and widely-supported CSS properties that give us more control over the styling of underlines.\nLet me demonstrate the usefulness of …\nWhen to Avoid the text-decoration Shorthand Property originally published on CSS-Tricks. You should get the newsletter.",
          "link": "https://css-tricks.com/when-to-avoid-css-text-decoration-shorthand/",
          "publishedOn": "2022-02-25T15:28:33.000Z",
          "wordCount": 1213,
          "title": "When to Avoid the text-decoration Shorthand Property",
          "imageUrl": "https://css-tricks.com/wp-json/social-image-generator/v1/image/363619"
        },
        {
          "id": "https://css-tricks.com/?p=364152",
          "author": "Chris Coyier",
          "description": "If you’re looking for a primer on CSS specificity, we’ve got that. And if you’re trying to get ahead of the game, you should be aware of CSS Cascade Layers as well.\nOne of the ways to help get …\nManuel Matuzovic’s CSS Specificity Demo originally published on CSS-Tricks. You should get the newsletter.",
          "link": "https://css-tricks.com/manuel-matuzovics-css-specificity-demo/",
          "publishedOn": "2022-02-25T15:27:19.000Z",
          "wordCount": 493,
          "title": "Manuel Matuzovic’s CSS Specificity Demo",
          "imageUrl": "https://css-tricks.com/wp-json/social-image-generator/v1/image/364152"
        },
        {
          "id": "https://css-tricks.com/?p=364138",
          "author": "Chris Coyier",
          "description": "Nic Chan:\n[…] the will-change property landed in major browsers in August 2015, and I’ve been on the lookout for when to use it ever since. It might seem self-evident to apply it to commonly animated properties such \n…\nMy white whale: A use case for will-change originally published on CSS-Tricks. You should get the newsletter.",
          "link": "https://css-tricks.com/my-white-whale-a-use-case-for-will-change/",
          "publishedOn": "2022-02-24T20:59:29.000Z",
          "wordCount": 603,
          "title": "My white whale: A use case for will-change",
          "imageUrl": "https://css-tricks.com/wp-json/social-image-generator/v1/image/364138"
        },
        {
          "id": "https://css-tricks.com/?p=363553",
          "author": "Anand Chowdhary",
          "description": "For the past few weeks, I’ve been hiring for a senior full-stack JavaScript engineer at my rental furniture company, Pabio. Since we’re a remote team, we conduct our interviews on Zoom, and I’ve observed that some developers are not …\nExplain the First 10 Lines of Twitter’s Source Code to Me originally published on CSS-Tricks. You should get the newsletter.",
          "link": "https://css-tricks.com/explain-the-first-10-lines-of-twitter-source-code/",
          "publishedOn": "2022-02-24T15:31:55.000Z",
          "wordCount": 6590,
          "title": "Explain the First 10 Lines of Twitter’s Source Code to Me",
          "imageUrl": "https://css-tricks.com/wp-json/social-image-generator/v1/image/363553"
        },
        {
          "id": "https://css-tricks.com/?p=363526",
          "author": "ImageEngine",
          "description": "(This is a sponsored post.)\nIn recent years, the Jamstack methodology for building websites has become increasingly popular. Performance, scalable, and secure, it’s easy to see why it’s becoming an attractive way to build websites for developers.\nGatsbyJS is …\nSuperior Image Optimization: An Ideal Solution Using Gatsby & ImageEngine originally published on CSS-Tricks. You should get the newsletter.",
          "link": "https://css-tricks.com/superior-image-optimization-an-ideal-solution-using-gatsby-imageengine/",
          "publishedOn": "2022-02-24T15:31:49.000Z",
          "wordCount": 2772,
          "title": "Superior Image Optimization: An Ideal Solution Using Gatsby & ImageEngine",
          "imageUrl": "https://css-tricks.com/wp-json/social-image-generator/v1/image/363526"
        },
        {
          "id": "https://css-tricks.com/?p=363937",
          "author": "Chris Coyier",
          "description": "Kinda silly sounding, isn’t it? CSS database queries. But, hey, CSS is capable of talking to other languages in the sense that it can set the values of things that they can read. Plus, CSS can request other files, and …\nCSS Database Queries? Sure We Can! originally published on CSS-Tricks. You should get the newsletter.",
          "link": "https://css-tricks.com/css-database-queries/",
          "publishedOn": "2022-02-23T20:04:39.000Z",
          "wordCount": 814,
          "title": "CSS Database Queries? Sure We Can!",
          "imageUrl": "https://css-tricks.com/wp-json/social-image-generator/v1/image/363937"
        }
      ]
    },
    {
      "title": "RastaLion's IT Blog",
      "feedUrl": "https://rastalion.me/feed/",
      "siteUrl": "https://rastalion.me",
      "articles": [
        {
          "id": "https://rastalion.me/?p=2468",
          "author": "Rasta Lion",
          "description": "DBeaver에서 java heap space 부족이라고 나올때 DB를 관리하는 툴중에 DBeaver라는 툴이 있습니다. 커뮤니티 버전은 프리웨어이기도 하고, 엔터프라이즈 버전은 낮은 가격에도 강력한 부가 기능들이 있어 주로 사용하는 DB툴입니다. DBeaver에서 대용량 테이블을 이관하거나 CSV 파일들의 작업을...\nThe post DBeaver에서 java heap space 부족이라고 나올때 appeared first on RastaLion's IT Blog.",
          "link": "https://rastalion.me/dbeaver%ec%97%90%ec%84%9c-java-heap-space-%eb%b6%80%ec%a1%b1%ec%9d%b4%eb%9d%bc%ea%b3%a0-%eb%82%98%ec%98%ac%eb%95%8c/",
          "publishedOn": "2022-03-01T15:22:02.000Z",
          "wordCount": 536,
          "title": "DBeaver에서 java heap space 부족이라고 나올때",
          "imageUrl": "https://rastalion.me/wp-content/uploads/2021/04/sm_5b46d890d85b8.jpg"
        }
      ]
    },
    {
      "title": "GeekNews - 개발/기술/스타트업 뉴스 서비스",
      "feedUrl": "https://news.hada.io/rss/news",
      "siteUrl": "https://news.hada.io",
      "articles": [
        {
          "id": "https://news.hada.io/topic?id=6113",
          "author": null,
          "description": "맥용 크롬이 애플의 Speedometer 2.0 테스트에서 모든 브라우저중 최고 점수인 300점을 받음\n작년에 ThinLTO 기능을 도입하여 속도가 많이 개선되어 사파리 보다 그래픽 포함 15% 빨라짐\nM1용 크롬 출시후 17개월 동안 그전보다 43% 빨라짐\n최근의 주요 속도 개선점은 V8 Sparkplug...",
          "link": "https://news.hada.io/topic?id=6113",
          "publishedOn": "2022-03-10T00:31:53.000Z",
          "wordCount": 111,
          "title": "크롬의 새로운 속도 마일스톤",
          "imageUrl": "https://social.news.hada.io/topic/6113"
        },
        {
          "id": "https://news.hada.io/topic?id=6112",
          "author": null,
          "description": "자신만의 이력서 카드를 생성해 홍보하고, 연동된 이력서 유입을 통계내는 애플리케이션을 개발했습니다.\n만들어진 이력서 카드는 마크업문서 (깃허브 리드미, 노션 등 이미지 링크 삽입을 지원하는 문서 작성 툴)에 포함시킬 수 있고, 이력서 카드에 연동된 이력서 유입을 통계내서 보여줍니다.\n통계...",
          "link": "https://news.hada.io/topic?id=6112",
          "publishedOn": "2022-03-09T12:54:27.000Z",
          "wordCount": 223,
          "title": "Show GN: 이력서 카드 생성과 이력서 유입 통계 관리",
          "imageUrl": "https://social.news.hada.io/topic/6112"
        },
        {
          "id": "https://news.hada.io/topic?id=6111",
          "author": null,
          "description": "페이스북에서 일하는 지인한테 페이스북에서는 일하는 방식과 성과 측정/평가를 어떻게 하는지를 듣고 이를 정리\n업무의 시작\n데이터를 기반으로 한 뚜렷하고 심플한 목표가 주기적으로 내려온다.\n이 목표를 이루기 위한 아이디어는 모든 작업자가 생각해 내서 프로젝트를 자발적으로",
          "link": "https://news.hada.io/topic?id=6111",
          "publishedOn": "2022-03-09T09:53:57.000Z",
          "wordCount": 295,
          "title": "페이스북 개발자의 성과 만들기",
          "imageUrl": "https://social.news.hada.io/topic/6111"
        },
        {
          "id": "https://news.hada.io/topic?id=6110",
          "author": null,
          "description": "왓챠가 발표한 종합플랫폼 왓챠 2.0 선언에 대한 분석\n왓챠는 생태계의 핵심을 리텐션이라 봤고, 리텐션 끌올을 위한 슈퍼앱 전략을 발표했습니다.\n이 슈퍼앱 전략의 핵심은 콘텐츠, 그리고 그 콘텐츠들은 ‘과몰입’을 유발할 수 있어야 합니다.\n근데 문제는 시장이 제로섬으로 가고",
          "link": "https://news.hada.io/topic?id=6110",
          "publishedOn": "2022-03-09T01:14:21.000Z",
          "wordCount": 101,
          "title": "말이 되는 왓챠 2.0, 하지만 그것만으로 될까",
          "imageUrl": "https://social.news.hada.io/topic/6110"
        },
        {
          "id": "https://news.hada.io/topic?id=6109",
          "author": null,
          "description": "Mac Studio\nM1 Max 와 M1 Ultra 탑재 버전\n가로세로 19.7cm로 맥미니와 같은 크기에 높이만 9.5cm로 약 2.6배 높음\nM1 Max 는 16코어 Xeon Mac Pro 대비 50% 빠름\nM1 Ultra 는 16코어 Xeon Mac Pro 대비 90% 빠르고, 28코어 Mac Pro 대비 60% 빠름\n4개의 썬더볼트...",
          "link": "https://news.hada.io/topic?id=6109",
          "publishedOn": "2022-03-08T23:59:37.000Z",
          "wordCount": 228,
          "title": "애플, Mac Studio 와 Studio Display 공개",
          "imageUrl": "https://social.news.hada.io/topic/6109"
        },
        {
          "id": "https://news.hada.io/topic?id=6108",
          "author": null,
          "description": "2개의 M1 Max칩 다이를 결합한 SoC\n20코어 CPU, 64코어 GPU, 32코어 뉴럴엔진\n1140억개의 트랜지스터(M1대비 7배)\n데스크탑칩 대비 10배 향상된 800GB/S 메모리 대역폭, 128GB 통합 메모리 구성...",
          "link": "https://news.hada.io/topic?id=6108",
          "publishedOn": "2022-03-08T23:47:22.000Z",
          "wordCount": 339,
          "title": "애플, M1 Ultra 칩 공개",
          "imageUrl": "https://social.news.hada.io/topic/6108"
        },
        {
          "id": "https://news.hada.io/topic?id=6107",
          "author": null,
          "description": "M1 : 8코어 CPU, 8코어 GPU, 16코어 뉴럴엔진\n10인치, 8G 램, 64/256GB , 461g\n이전 세대 iPad Air보다 CPU는 60%, GPU는 2배 빠름\n센터스테이지 적용된 울트라와이드 12MP 전면 카메라\n5G 지원, 2배 빠른 USB-C\nLiquid Retina 디스플레이\n상단 버튼 터...",
          "link": "https://news.hada.io/topic?id=6107",
          "publishedOn": "2022-03-08T23:28:49.000Z",
          "wordCount": 128,
          "title": "애플, M1칩 탑재한 iPad Air 공개",
          "imageUrl": "https://social.news.hada.io/topic/6107"
        },
        {
          "id": "https://news.hada.io/topic?id=6106",
          "author": null,
          "description": "전세계 주요 신문사 및 커뮤니티의 일간 탑 헤드라인 5개씩만 모아보는 페이지\n\nNYTimes, Reuters, Aljazeera, BBC, Washington Post, CNN, Epoch Times, France 24\nr/UpliftingNews, Cointelegraph, Lifehacker, Twitter World Trends, Slashdot, Verge\n글로벌 또는 국...",
          "link": "https://news.hada.io/topic?id=6106",
          "publishedOn": "2022-03-08T01:26:41.000Z",
          "wordCount": 204,
          "title": "Just Five - 하루를 시작하는 헤드라인 뉴스 다섯개",
          "imageUrl": "https://social.news.hada.io/topic/6106"
        },
        {
          "id": "https://news.hada.io/topic?id=6105",
          "author": null,
          "description": "EA가 GPL로 공개한 심시티 오픈소스 버전인 micropolis를 JS/TS + HTML 버전으로 직접 포팅한 오픈소스\n웹에서 플레이 가능\n\n...",
          "link": "https://news.hada.io/topic?id=6105",
          "publishedOn": "2022-03-08T01:10:49.000Z",
          "wordCount": 85,
          "title": "micropolisJS - 오리지널 심시티 클론",
          "imageUrl": "https://social.news.hada.io/topic/6105"
        },
        {
          "id": "https://news.hada.io/topic?id=6104",
          "author": null,
          "description": "\"러시아를 제재하는 국가들\"의 소프트웨어를 불법복제해서 사용하는 것에 대해서 형사/행정적 책임을 철폐하는 방안이 논의 되고 있음\nMicrosoft, IBM, Oracle 같은 기업들이 러시아에서 떠나는 것을 일시적으로 완화할 수 있을 것이라고\n하지만 대부분의 소프트웨어가 구독형이기...",
          "link": "https://news.hada.io/topic?id=6104",
          "publishedOn": "2022-03-08T00:50:45.000Z",
          "wordCount": 118,
          "title": "러시아, 소프트웨어 불법복제 합법화 논의중",
          "imageUrl": "https://social.news.hada.io/topic/6104"
        }
      ]
    },
    {
      "title": "기억보단 기록을",
      "feedUrl": "https://jojoldu.tistory.com/rss",
      "siteUrl": "https://jojoldu.tistory.com/",
      "articles": [
        {
          "id": "https://jojoldu.tistory.com/643",
          "author": "향로",
          "description": "반응형\n\n                    \n                    (adsbygoogle = window.adsbygoogle || []).push({}); \n               \n\n여러 포스팅에서 언급한것처럼 테스트 코드는 빠르게 실패를 파악할 수 있어야 한다.\n그런면에서 Optional chaining(?.) 은 테스트코드에 적합하지 않다.\nMDN의 설명을 가져오면 Optional chaining(?.)은 체이닝 연산자(.) 와 유사하게 작동하지만, 만약 참조가 nullish (en-US) (null 또는 undefined)이라면, 에러가 발생하는 것 대신에 표현식의 리턴 값을 undefined로 반환한다.\n따라서 참조가 누락될 가능성이 있는 경우 연결된 속성으로 접근할 때 더 짧고 간단한 표현식이 생성된다. \n어떤 속성이 필요한지에 대한 보증이 확실하지 않는 경우 객체의 내용을 탐색하는 동안 도움이 될 수 있다.\n안정적으로 객체 탐색이 가능하기 때문에 프로덕션 코드에서는 적극적으로 사용하는 편이다. \n하지만 테스트 코드에서는 안정적인 점이 오히려 단점이 된다.\n문제\n이를 테면 다음과 같이 sut 의 하위에 있는 pay.amount 를 검증한다고 하자. \n이때 Optional chaining(?.) 을 사용한다면 다음과 같다.\nit('?가 있는 경우 #1', () => {\n    const amount = 0;\n    const sut = createOrder(amount);\n\n    expect(sut?.pay?.amount).toBe(amount);\n});\n\nclass Order…",
          "link": "https://jojoldu.tistory.com/643",
          "publishedOn": "2022-03-08T00:26:46.000Z",
          "wordCount": 506,
          "title": "테스트코드에서 Optional chaining(?.) 쓰지않기",
          "imageUrl": "https://img1.daumcdn.net/thumb/R800x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FzIsO7%2FbtrvtcvF3Zi%2FkghW6ofDOgXOiKJsfHYGLK%2Fimg.png"
        },
        {
          "id": "https://jojoldu.tistory.com/642",
          "author": "향로",
          "description": "반응형\n\n                    \n                    (adsbygoogle = window.adsbygoogle || []).push({}); \n               \n\n테스트 코드는 프로젝트의 생명 주기 보다 길때가 많다. \n기존의 요구사항을 정리한것이 테스트 코드이기 때문에, 메인 코드보다 훨씬 더 읽기쉬워야만 한다.\n만약 테스트 코드가 복잡한 경우 어떻게 작동하는지 이해하기가 어렵다. \n그래서 테스트 코드는 주석이 필요 없을 정도로 간단해야 한다.\n그런면에서 조건부 (if ~ else) 테스트 로직은 테스트를 실제보다 더 복잡하게 만드는 요인 중 하나다.\n이번 글에서는 조건부 로직을 테스트에서 사용한 경우에 어떻게 개선할 수 있을지 알아본다.\n1. 가변 결과를 검증하는 경우\n1-1. 문제\n첫번째 문제는 다음과 같이 테스트 실행때마다 결과가 달라지는 경우이다.\nit('[Bad] 가변결과 검증', () => {\n    const now = LocalDateTime.now();\n    const sut = new TimeDisplay();\n    const result = sut.display(now);\n\n    let actual;\n    if(now.hour() === 0 && now.minute() === 0) {\n        actual = 'Midnight';\n    } else if (now.hour() === 12 && now.minute() === 0) {\n        actual = 'Noon';\n    } else {\n        actual = no…",
          "link": "https://jojoldu.tistory.com/642",
          "publishedOn": "2022-03-07T03:35:43.000Z",
          "wordCount": 1072,
          "title": "조건부 (if~else) 로직 테스트코드에서 사용하지 않기",
          "imageUrl": "https://img1.daumcdn.net/thumb/R800x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fcxmuyf%2Fbtrvne8iDrE%2FKAaA0pw9W0LAHjVj3iniTk%2Fimg.png"
        },
        {
          "id": "https://jojoldu.tistory.com/641",
          "author": "향로",
          "description": "반응형\n\n                    \n                    (adsbygoogle = window.adsbygoogle || []).push({}); \n               \n\nGithub 에는 앞으로 출시할 기능 (Beta) 을 미리 써볼 수 있는 옵션이 있습니다. \n특히 최근에 Pull Request시 파일 트리를 볼 수 있는 기능이 베타 출시되었는데요. \n코드리뷰시에 굉장히 큰 도움을 주기 때문에 바로 적용해서 써보시는 것을 추천드립니다.\n이 포스팅은 2022.03.05에 작성된 것이기 때문에, 소개되는 베타기능들은 이후에 대부분 정식 출시된 상태일 것입니다.\n설정\nGithub 우측 상단의 프로필 아이콘을 클릭하신뒤, Feature preview를 선택합니다.\n그럼 아래와 같이 Modal이 나오는데, 이때 원하시는 베타 기능들을 선택하시고 Enable 을 누르시면 됩니다. \n(Enable을 클릭하면 아래와 같이 Disable로 버튼이 변경됩니다.)\n저는 여기서 Command Palette 와 Pull Request File Tree를 사용하도록 선택했습니다.\n설정하신 후에 새로고침을 해보시면 다음과 같이 Pull Request 화면의 좌측 사이드바에 검색창과 파일/디렉토리가 생긴 것을 볼 수 있습니다.\n해당 검색창에서 파일명으로 검색도 가능하며, 파일 클릭시 코드리뷰 화면에서도 바로 해당 파일로 이동이 됩니다.\nCommand Palette도 적용되어 Command + k (맥 기준) 다음과 같이 Github 웹 사이트에서 커맨드로 여러 액션을 수행할 수 있습니다.\n마무리\n기존에 Octotree 를 통해서 코드리뷰시 디렉토리와 파일을 보던 입장에서는 아주 환영할만한 기능이 추가되었습니다. \nGithub에서 이야기하는 여러 기능들을 미리 볼 수 있는 Feature preview 를 자주 보시면서 신규 기능이 나올때마다 사용해보시면 훨씬 재밌는 Github 경험을 해볼 수 있을것 같습니다.\n            \n반응형\n\n                    \n                    (adsbygoogle = window.adsbygoogle || []).push({});",
          "link": "https://jojoldu.tistory.com/641",
          "publishedOn": "2022-03-05T11:19:36.000Z",
          "wordCount": 352,
          "title": "Github 기능 미리 써보기 (Code Review시 디렉토리 미리보기)",
          "imageUrl": "https://img1.daumcdn.net/thumb/R800x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fb8p70Y%2Fbtru7rhAEhd%2FbF4p5PK6KGMUDQvE5fDK9k%2Fimg.png"
        },
        {
          "id": "https://jojoldu.tistory.com/640",
          "author": "향로",
          "description": "반응형\n\n                    \n                    (adsbygoogle = window.adsbygoogle || []).push({}); \n               \n\n랠릿 서비스 를 오픈하고 참여자들의 개인 소감을 다들 작성하는 시간을 가졌다. \n실제 프로젝트의 프로세스 방식, QA 방식등을 전체적인 회고는 내일 (2022.03.02) 진행할 예정인데, 그 전에 각자 어땠는지 소감을 작성하는 시간을 2월에 가졌다.\n이번 글은 사내에 공유한 소감글을 블로그로 옮겼다.\n루비콘 프로젝트에서 진행한 프로젝트 방식 / 백엔드 프로젝트 방식 등은 TF 회고가 끝나고 올라갈 예정이다. \n이건 프로젝트에 참여한 개인적인 짧은 생각들만 정리했다.\n프로젝트 구성원들의 전체 소감은 3월안에 링크로 공유될 예정이다.\n일정\n프로젝트는 7월에 시작되어, 1월 27일에 정식 오픈하였다. \n중간 투입된 분들은 잘 모르실 수 있지만, 초기에 대표님과 PO 1분이 같이 사용자 스토리 잡는 것이 7월부터였다.\n7 ~ 8월: 사용자스토리, 와이어프레임\n9월: 디자인 구체화 / 도메인 & 개발환경 설계\n10월 ~ 12월: 개발\n12월 ~ 1월: QA 및 남은 기능 구현\n공식적으로는 약 7개월간 진행된 것이다.\n다만, 본격적으로 개발은 9월부터 진행되어 3개월간 개발하여 12월부터 QA를 하게 됐다.\n(9월 2일, 3일에 시작된 첫커밋)\n개발 기간만 보면 짧았지만, 전체 일정을 보면 결코 짧은 일정은 아니였다. \n7개월이란 시간이 빡빡하게 느껴진 것은 이 기간 안에서 비효율적으로 낭비되는 시간이 많았기 때문이…",
          "link": "https://jojoldu.tistory.com/640",
          "publishedOn": "2022-03-01T13:51:53.000Z",
          "wordCount": 1404,
          "title": "루비콘 프로젝트 (랠릿 오픈 프로젝트) 소감",
          "imageUrl": "https://img1.daumcdn.net/thumb/R800x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbdAIbH%2FbtruITrAVSl%2FSH5wfXmM2yaUadAK9kuS90%2Fimg.png"
        },
        {
          "id": "https://jojoldu.tistory.com/639",
          "author": "향로",
          "description": "반응형\n\n                    \n                    (adsbygoogle = window.adsbygoogle || []).push({}); \n               \n\n최근 팀에서 코드리뷰를 진행하던 중에 promise.all 과 트랜잭션에 대해 오해하고 있는 부분들을 발견하게 되어 정리하게 되었습니다.\nPromise.all (혹은 allSettled)을 사용하면 트랜잭션 내에서도 비동기로 여러 작업들이 동시에 이루어질 수 있다고 오해하는 것인데요. \n실험을 해보면 그게 아니라는 것을 알 수 있습니다.\n실제 코드를 가지고 검증해보겠습니다.\n모든 실험 결과에 대해서 틀린 내용이 있다면 바로 댓글로 지적해주세요! \n모든 지적은 저의 성장에 많은 도움이 되기 때문에 감사한 마음으로 수정하겠습니다 :)\n0. 테스트 환경\n테스트할 환경은 다음과 같습니다.\nNode.js 16.3.1\nPostgreSQL 13.2\n모든 코드는 Github 에 있습니다.\n1. Promise.all\n먼저 promise.all 에 대해서 알아보겠습니다. \n(이미 아시겠지만, 이후 테스트를 설명하기 위한 배경 설명으로 봐주시면 됩니다.)\n테스트를 위해 다음과 같이 2개의 함수를 만들겠습니다.\nexport function sleep(sec) {\n    const start = performance.now();\n    return new Promise(resolve=>{\n        setTimeout(resolve, sec * 1000);\n    }).then(() => {\n        console.log…",
          "link": "https://jojoldu.tistory.com/639",
          "publishedOn": "2022-02-28T14:05:44.000Z",
          "wordCount": 1413,
          "title": "Promise.all 과 Transactions (feat. Node.js)",
          "imageUrl": "https://img1.daumcdn.net/thumb/R800x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FziO3a%2FbtruLtSuE7m%2FK95dBn4FuwdIr8xSRM2FIK%2Fimg.png"
        },
        {
          "id": "https://jojoldu.tistory.com/638",
          "author": "향로",
          "description": "반응형\n\n                    \n                    (adsbygoogle = window.adsbygoogle || []).push({}); \n               \n\nNodeJS 기반의 백엔드에서는 NestJS, RoutingControllers 등 최근 대세가 되는 MVC 프레임워크들이 모두 Class를 기반으로 한 DI (Dependency Injection) 방식을 사용하고 있다.\n그러다보니 Jest의 Mocking 방식은 백엔드 NodeJS 환경에서 적합한 도구는 아닐 수 있다. \n특히, Mock/Stub 객체 생성에 불편한 점이 많다.\n그래서 Test Runner로서 Jest는 사용하더라도, Mock 라이브러리는 다른 것을 사용하는 것을 추천하는데, 그 중 대표적인 것들은 다음과 같다.\nts-mockito\nsinonjs\njest-mock-extended\n이번 글에서는 그 중 ts-mockito 를 통한 테스트 더블 (Mock, Stub 등) 활용법을 알아본다.\n1. Jest 와 ts-mockito 비교\n먼저 기존 Jest 방식이 왜 불편한지 보자.\nJest로 객체 Mock/Stub 하는것에 대한 불편함만 다룬다. \n이외에는 Jest는 장점이 많은 테스트 프레임워크이다.\n테스트할 메인 코드는 다음과 같다.\nexport class OrderService {\n    constructor(\n        private readonly orderRepository: OrderRepository,\n        ) {\n    }\n\n    validateCompletedOr…",
          "link": "https://jojoldu.tistory.com/638",
          "publishedOn": "2022-02-21T01:33:06.000Z",
          "wordCount": 1315,
          "title": "jest.mock 보다 ts-mockito 사용하기 (feat. Node.js)",
          "imageUrl": "https://img1.daumcdn.net/thumb/R800x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FyDHv8%2FbtrtKCYT5Rm%2FFrJHxHENdmXT37oOchhOgK%2Fimg.png"
        },
        {
          "id": "https://jojoldu.tistory.com/637",
          "author": "향로",
          "description": "반응형\n\n                    \n                    (adsbygoogle = window.adsbygoogle || []).push({}); \n               \n\n간혹 Service 계층을 항상 통합 테스트로만 작성하는 경우를 보게됩니다. \n모든 Service를 통합 테스트 혹은 E2E 테스트로만 검증하기 보다는 상황에 따라 적절한 Stub을 사용하여 단위 테스트로 작성한다면 전체 테스트 속도 향상에 도움이 됩니다.\n몇가지 예제를 통해 Stub을 사용하는 단위 테스트 코드를 보겠습니다.\n모든 코드는 Github 에 있습니다..\n예제 1.\n첫번째 예제로 다음과 같은 서비스 로직에 대한 단위 테스트입니다.\nexport class OrderService {\n    constructor(private readonly orderRepository: OrderRepository) {\n    }\n\n    validateCompletedOrder(orderId: number): void {\n        const order = this.orderRepository.findById(orderId);\n        if(order.isNotCompleted()) {\n            throw new Error('아직 완료처리되지 못했습니다.');\n        }\n    }\n}\n코드의 흐름을 이야기해보면\norderRepository를 통해 주문을 조회한다\n조회된 주문 상태가 완료가 아니면 메세지와 함께 에러가 발생한다\n조회된 주문 상태가 완료처리인 경우 그대로 메소드가 종료\n여…",
          "link": "https://jojoldu.tistory.com/637",
          "publishedOn": "2022-02-12T10:52:06.000Z",
          "wordCount": 1422,
          "title": "Stub 을 이용한 Service 계층 단위 테스트 하기",
          "imageUrl": "https://img1.daumcdn.net/thumb/R800x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FuafVI%2Fbtrs7lXnos1%2FUrCOOiX7kXaZcBnmJixBL0%2Fimg.png"
        }
      ]
    }
  ],
  "cliVersion": "1.14.4"
}