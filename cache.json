{
  "sources": [
    {
      "title": "CSS-Tricks",
      "feedUrl": "https://css-tricks.com/feed/",
      "siteUrl": "https://css-tricks.com",
      "articles": [
        {
          "id": "https://css-tricks.com/?p=365491",
          "author": "Preethi",
          "description": "In design, reflections are stylized mirror images of objects. Even though they are not as popular as shadows, they have their moments — just think about the first time you explored the different font formats in MS Word or PowerPoint: …\nCreating Realistic Reflections With CSS originally published on CSS-Tricks. You should get the newsletter.",
          "link": "https://css-tricks.com/creating-realistic-reflections-with-css/",
          "publishedOn": "2022-05-02T14:14:07.000Z",
          "wordCount": 1006,
          "title": "Creating Realistic Reflections With CSS",
          "imageUrl": "https://css-tricks.com/wp-json/social-image-generator/v1/image/365491"
        },
        {
          "id": "https://css-tricks.com/?p=365447",
          "author": "Jhey Tompkins",
          "description": "Howdy y’all! Unless you’ve been living under a rock (and maybe even then), you’ve undoubtedly heard the news that CSS-Tricks, was acquired by DigitalOcean. Congratulations to everyone! 🥳\nAs a little hurrah to commemorate the occasion, I wanted to …\nCreating the DigitalOcean Logo in 3D With CSS originally published on CSS-Tricks. You should get the newsletter.",
          "link": "https://css-tricks.com/creating-the-digitalocean-logo-in-3d-with-css/",
          "publishedOn": "2022-04-29T14:37:10.000Z",
          "wordCount": 3009,
          "title": "Creating the DigitalOcean Logo in 3D With CSS",
          "imageUrl": "https://css-tricks.com/wp-json/social-image-generator/v1/image/365447"
        },
        {
          "id": "https://css-tricks.com/?p=365413",
          "author": "Adam Rackis",
          "description": "In my last article, we went over how to set up a web app that serves chunks and bundles of CSS and JavaScript from CloudFront. We integrated it into Vite so that when the app runs in a browser, …\nSetting Up CloudFront to Host Your Web App originally published on CSS-Tricks. You should get the newsletter.",
          "link": "https://css-tricks.com/setting-up-cloudfront-to-host-your-web-app/",
          "publishedOn": "2022-04-28T14:42:48.000Z",
          "wordCount": 2861,
          "title": "Setting Up CloudFront to Host Your Web App",
          "imageUrl": "https://css-tricks.com/wp-json/social-image-generator/v1/image/365413"
        },
        {
          "id": "https://css-tricks.com/?p=365383",
          "author": "Temani Afif",
          "description": "A while ago, Geoff wrote an article about a cool hover effect. The effect relies on a combination of CSS pseudo-elements, transforms, and transitions. A lot of comments have shown that the same effect can be done using background …\nCool Hover Effects That Use Background Properties originally published on CSS-Tricks. You should get the newsletter.",
          "link": "https://css-tricks.com/cool-hover-effects-using-background-properties/",
          "publishedOn": "2022-04-27T14:20:07.000Z",
          "wordCount": 3530,
          "title": "Cool Hover Effects That Use Background Properties",
          "imageUrl": "https://css-tricks.com/wp-json/social-image-generator/v1/image/365383"
        },
        {
          "id": "https://css-tricks.com/?p=365359",
          "author": "Dan Christofi",
          "description": "When creating a component-based, front-end infrastructure, one of the biggest pain points I’ve personally encountered is making components that are both reusable and responsive when there are nested components within components.\nTake the following “call to action” (<CTA />…\nAvoiding the Pitfalls of Nested Components in a Design System originally published on CSS-Tricks. You should get the newsletter.",
          "link": "https://css-tricks.com/nested-components-in-a-design-system/",
          "publishedOn": "2022-04-26T14:30:20.000Z",
          "wordCount": 2813,
          "title": "Avoiding the Pitfalls of Nested Components in a Design System",
          "imageUrl": "https://css-tricks.com/wp-json/social-image-generator/v1/image/365359"
        },
        {
          "id": "https://css-tricks.com/?p=364218",
          "author": "Mark Noonan",
          "description": "Automated front-end tests are awesome. We can write a test with code to visit a page — or load up just a single component — and have that test code click on things or type text like a user would, …\nWriting Strong Front-end Test Element Locators originally published on CSS-Tricks. You should get the newsletter.",
          "link": "https://css-tricks.com/front-end-test-element-locators/",
          "publishedOn": "2022-04-22T18:45:38.000Z",
          "wordCount": 4459,
          "title": "Writing Strong Front-end Test Element Locators",
          "imageUrl": "https://css-tricks.com/wp-json/social-image-generator/v1/image/364218"
        },
        {
          "id": "https://css-tricks.com/?p=364880",
          "author": "Greg Sullivan",
          "description": "In the 15 or so years since I started making WordPress websites, nothing has had more of an impact on my productivity — and my ability to enjoy front-end development — than adding Tailwind CSS to my workflow (and it …\nAdding Tailwind CSS to New and Existing WordPress Themes originally published on CSS-Tricks. You should get the newsletter.",
          "link": "https://css-tricks.com/adding-tailwind-css-to-wordpress-themes/",
          "publishedOn": "2022-04-20T15:30:29.000Z",
          "wordCount": 3707,
          "title": "Adding Tailwind CSS to New and Existing WordPress Themes",
          "imageUrl": "https://css-tricks.com/wp-json/social-image-generator/v1/image/364880"
        },
        {
          "id": "https://css-tricks.com/?p=364908",
          "author": "Paul Esch-Laurent",
          "description": "Mermaid diagrams and flowcharts have been gaining traction, especially with GitHub’s announcement that they are natively supported in Markdown. Let’s take a look at what they are, how to use them, and just as importantly: why.\nJust like you …\nMaking Mermaid Diagrams in Markdown originally published on CSS-Tricks. You should get the newsletter.",
          "link": "https://css-tricks.com/making-mermaid-diagrams-in-markdown/",
          "publishedOn": "2022-04-18T16:01:08.000Z",
          "wordCount": 1556,
          "title": "Making Mermaid Diagrams in Markdown",
          "imageUrl": "https://css-tricks.com/wp-json/social-image-generator/v1/image/364908"
        },
        {
          "id": "https://css-tricks.com/?p=364385",
          "author": "Shimin Zhang",
          "description": "I’m a big fan of movies by J.J. Abrams. I enjoy their tight plots, quippy dialog, and of course: anamorphic lens flares. Filmmakers like Abrams use lens flare to add a dash of ‘homemade’ realism to their movies, …\nAdd a CSS Lens Flare to Photos for a Bright Touch originally published on CSS-Tricks. You should get the newsletter.",
          "link": "https://css-tricks.com/add-a-css-lens-flare-to-photos-for-a-bright-touch/",
          "publishedOn": "2022-04-12T17:10:13.000Z",
          "wordCount": 1570,
          "title": "Add a CSS Lens Flare to Photos for a Bright Touch",
          "imageUrl": "https://css-tricks.com/wp-json/social-image-generator/v1/image/364385"
        },
        {
          "id": "https://css-tricks.com/?p=364166",
          "author": "Adam Rackis",
          "description": "Content delivery networks, or CDNs, allow you to improve the delivery of your website’s static resources, most notably, with CDN caching. They do this by serving your content from edge locations, which are located all over the world. When a …\nAdding CDN Caching to a Vite Build originally published on CSS-Tricks. You should get the newsletter.",
          "link": "https://css-tricks.com/adding-cdn-caching-to-a-vite-build/",
          "publishedOn": "2022-04-04T18:25:23.000Z",
          "wordCount": 1321,
          "title": "Adding CDN Caching to a Vite Build",
          "imageUrl": "https://css-tricks.com/wp-json/social-image-generator/v1/image/364166"
        }
      ]
    },
    {
      "title": "RastaLion's IT Blog",
      "feedUrl": "https://rastalion.me/feed/",
      "siteUrl": "https://rastalion.me",
      "articles": [
        {
          "id": "https://rastalion.me/?p=2505",
          "author": "Rasta Lion",
          "description": "MongoDB Developer Workshop 후기 (with Google Cloud) 오랜만에 포스팅입니다. 정말 오랜만이네요. 이직하고나서 딱히 쓸 글이 없었습니다. 다들 저보다 잘하시고, 연차는 쌓여가는데 초급 포스팅만 계속 하기도 좀 그랬습니다. 이번에 MongoDB Korea에서 오프라인 핸즈온 세미나를 열었습니다....\nThe post MongoDB Developer Workshop 후기 (with Google Cloud) appeared first on RastaLion's IT Blog.",
          "link": "https://rastalion.me/mongodb-developer-workshop-%ed%9b%84%ea%b8%b0-with-google-cloud/",
          "publishedOn": "2022-04-22T14:29:18.000Z",
          "wordCount": 1057,
          "title": "MongoDB Developer Workshop 후기 (with Google Cloud)",
          "imageUrl": "https://rastalion.me/wp-content/uploads/2020/04/37_2019081518484308.jpg"
        }
      ]
    },
    {
      "title": "GeekNews - 개발/기술/스타트업 뉴스 서비스",
      "feedUrl": "https://news.hada.io/rss/news",
      "siteUrl": "https://news.hada.io",
      "articles": [
        {
          "id": "https://news.hada.io/topic?id=6482",
          "author": null,
          "description": "InfoQ는 자신들의 About에 올해 기사 편집시에 집중할 기술들을 정리해두고 매년 업데이트\nInnovators\nRust\nWASM\neBPF\nML@Edge\nProject Loom\nJava 16\nDeFi\nFederated Machine Learning\nDifferentiated Privacy",
          "link": "https://news.hada.io/topic?id=6482",
          "publishedOn": "2022-05-03T01:17:04.000Z",
          "wordCount": 318,
          "title": "InfoQ의 2022년 중점 기술들",
          "imageUrl": "https://social.news.hada.io/topic/6482"
        },
        {
          "id": "https://news.hada.io/topic?id=6481",
          "author": null,
          "description": "엑셀과 비슷한 기능 제공\n\n포맷팅, 셀/행/열 단위 조작, undo/redo/copy/paste 및 드래그앤드롭\nFormula 및 펑션 지원\n필터 및 소팅\n피봇 테이블, 차트, 댓글, 협업 편집, 사진 넣기..\nV3는 TypeScript로 재작성 중\n\n...",
          "link": "https://news.hada.io/topic?id=6481",
          "publishedOn": "2022-05-03T01:01:52.000Z",
          "wordCount": 87,
          "title": "Luckysheet - JS 스프레드시트 라이브러리 오픈소스",
          "imageUrl": "https://social.news.hada.io/topic/6481"
        },
        {
          "id": "https://news.hada.io/topic?id=6480",
          "author": null,
          "description": "남들이 모를만한 것인데 재미나게 얘기해주실 수 있는 것들 있지 않으신가요?\nHN의 Teach me someth",
          "link": "https://news.hada.io/topic?id=6480",
          "publishedOn": "2022-05-03T00:43:24.000Z",
          "wordCount": 93,
          "title": "Ask GN: 새로운 것 하나만 알려주세요",
          "imageUrl": "https://social.news.hada.io/topic/6480"
        },
        {
          "id": "https://news.hada.io/topic?id=6479",
          "author": null,
          "description": "현재 근무중인 스타트업에서 같이 일할 멤버를 찾고 계시다면\n멤버가 직접 1개의 댓글로 홍보를 작성\"하시면 됩니다. (서치펌 등은 불가)\n이 글은 매월 첫번째 월요일에 등록",
          "link": "https://news.hada.io/topic?id=6479",
          "publishedOn": "2022-05-03T00:34:48.000Z",
          "wordCount": 196,
          "title": "Ask GN: Ask GN: 이달의 구인공고 - 멤버를 찾고 계신가요 ? (2022년 5월)",
          "imageUrl": "https://social.news.hada.io/topic/6479"
        },
        {
          "id": "https://news.hada.io/topic?id=6478",
          "author": null,
          "description": "Cargo 보다 최대 5배까지 빠른 빌드 지원\n현재는 rustc nightly 만 지원\n맥/윈도우/리눅스\nGitHub CI/CD 연동 지원\n\n...",
          "link": "https://news.hada.io/topic?id=6478",
          "publishedOn": "2022-05-03T00:24:02.000Z",
          "wordCount": 85,
          "title": "Fleet - Rust용 빠른 빌드 도구",
          "imageUrl": "https://social.news.hada.io/topic/6478"
        },
        {
          "id": "https://news.hada.io/topic?id=6477",
          "author": null,
          "description": "파이썬 앱에 \"Edit and Continue\" 기능을 제공\n함수가 변경될 때마다 재실행\nPyCharm용 플러그인 제공(다른 에디터도 지원예정)\nDjango / Flask 도 저장할 때마다 뷰/앱을 리로드 & 리프레시\nSqlAlchemy 에서 함수를 재실행한 후 필요 없는 객체 생기지 않도...",
          "link": "https://news.hada.io/topic?id=6477",
          "publishedOn": "2022-05-03T00:07:01.000Z",
          "wordCount": 100,
          "title": "Reloadium - Advanced Hot Reloading for Python",
          "imageUrl": "https://social.news.hada.io/topic/6477"
        },
        {
          "id": "https://news.hada.io/topic?id=6476",
          "author": null,
          "description": "재무 전문가들이 주요 의사결정 활동을 지원하기 위해, 비즈니스 전반에 직접 참여 하도록 요청받고 있음\nCJ/NDR/FinOps 등 CFO의 책임 영역이 확장\n실시간 데이터 접근, 데이터 사이언스 활용, 자동화 등 다양한 기술적인 과제들이 생기고 있음 → 재무 리더를 위한 기술 스택이 필요\n...",
          "link": "https://news.hada.io/topic?id=6476",
          "publishedOn": "2022-05-02T02:02:01.000Z",
          "wordCount": 427,
          "title": "차세대 CFO의 부상 : 재무의 역할 및 기술 스택의 진화",
          "imageUrl": "https://social.news.hada.io/topic/6476"
        },
        {
          "id": "https://news.hada.io/topic?id=6475",
          "author": null,
          "description": "누군가 SaaS를 첨부터 만든다면 알아둘 업체는 뭐가 있을까요?라는 HN의 질문에 대한 답들\nCloudflare : 가격 경쟁력과 빠른 기술적 대응\nHetzner/OVH : 클라우드는 아니지만, 빠르고 저렴한 Dedicated 서버\nOracle Cloud : 전송량 많을 때 좋음(Zoom이 사용)\nVultr/Digital",
          "link": "https://news.hada.io/topic?id=6475",
          "publishedOn": "2022-05-02T01:31:01.000Z",
          "wordCount": 140,
          "title": "AWS/Azure/GCP 외에 알아둬야 할 클라우드 업체는?",
          "imageUrl": "https://social.news.hada.io/topic/6475"
        },
        {
          "id": "https://news.hada.io/topic?id=6474",
          "author": null,
          "description": "Pyodide(WASM) 기반으로 서버 도움없이 브라우저내에서 파이썬 코드를 실행\n<py-script> 로 코드 실행, <py-repl> 로 REPL을 컴포넌트 생성\n다양한 파이썬 패키지 이용가능 : numpy, pandas, scikit-learn..\nPython 과 Javascript 객체간 양방향 통신 지원\n버...",
          "link": "https://news.hada.io/topic?id=6474",
          "publishedOn": "2022-05-02T01:13:01.000Z",
          "wordCount": 100,
          "title": "PyScript - HTML에서 Python 코드 실행하기",
          "imageUrl": "https://social.news.hada.io/topic/6474"
        },
        {
          "id": "https://news.hada.io/topic?id=6473",
          "author": null,
          "description": "색을 제거한 모노크롬 형태라 마음대로 색을 입혀서 사용\n가변글꼴(Variable)이어서 light/bold 등 지정 가능\n3663개의 이모지를 흑백에 맞춰서 다양하게 변형\n\n국기는 2자리 약자로 표시 : KR,US\n사람을 나타내는 이모지는 예전 blob(블롭, 얼룩 모양)로\n...",
          "link": "https://news.hada.io/topic?id=6473",
          "publishedOn": "2022-05-02T00:39:51.000Z",
          "wordCount": 98,
          "title": "구글, 흑백 이모지 폰트 Noto Emoji 공개",
          "imageUrl": "https://social.news.hada.io/topic/6473"
        }
      ]
    },
    {
      "title": "기억보단 기록을",
      "feedUrl": "https://jojoldu.tistory.com/rss",
      "siteUrl": "https://jojoldu.tistory.com/",
      "articles": [
        {
          "id": "https://jojoldu.tistory.com/670",
          "author": "향로",
          "description": "반응형\n\n                    \n                    (adsbygoogle = window.adsbygoogle || []).push({}); \n               \n\n회사 업무를 진행하다보면 매번 자주 하는 작업 중 하나가, 배포공유이다. \n배포가 완료되고, Jira의 티켓들을 Release 하고나면, 어떤 티켓들이 이번에 운영에 배포되었는지를 Slack에 공유하는 것이다.\n매번 하는 것이 귀찮으니, 자동화를 진행할 필요가 있다.\n1. Jira Rule 생성\nJira에는 자동화를 지원하는 기능이 있다. \nAutomation 이라는 기능인데, Jira의 굉장히 많은 기능들을 별도의 앱 없이 자동화를 사용할 수 있도록 한다.\n이를 이용하면 Slack / Github / Jenkins 등의 연동을 아주 쉽게 할 수 있다.\n이번 글에서도 마찬가지로 Jira Automation을 이용해서 진행한다.\nJira 보드의 좌측에 있는 Project settings를 선택한다.\n이동된 좌측 사이드바의 Automation을 선택한 뒤,\nCreate rule을 클릭한다.\n그럼 Automation의 앱을 만들수 있는 페이지로 이동하는데, When (Trigger) -> Then (Action) -> And (Action) 의 템플릿으로 생성이 가능하다.\n이 Rule의 트리거는 Jira Version이 release 되었을때이니, 이를 새로운 트리거로 등록한다.\n해당 트리거가 발생 후, 실행할 행동을 위해 New action을 선택한다.\n어떤 Jira 티켓들을 슬랙으로 보낼지 조회를 할 수 있도록 다음 행동은 Lookup issues를 선택한다. \n해당 액션은 JQL을 통해 티켓들을 가져올 수 있다. \n이를 통해 특정 프로젝트의 해당 버전에 해당하는 티켓들만 가져올 수 있다.\n특정 프로젝트의 특정 버전의 티켓들만 가져오기 위해서 다음과 같이 JQL을 작성한다.\nproject = 프로젝트ID AND fixVersion = '{{version.name}}'\n이렇게 가져온 Jira 티켓들의 정보를 Slack으로 보내기 위해 다음 액션을 선택한다.\nSlack 연동은 기본적으로 지원하는 액션이라 바로 Slack 을 검색해서 선택한다.\n미리 생성해둔 Slack 웹훅 주소를 등록하고, 다음과 같이 슬랙 메세지를 작성한다.\n운영 배포 되었습니다. \n\nversion: {{version.name}}\nreleasedAt: {{now.jqlDateTime.convertToTimeZone(\"Asia/Seoul\")}}\n\n-------- 반영 티켓 --------\n\n{{#lookupIssues}}\n- <{{url}}|[{{key}}]> {{summary}}\n{{/}}\n미리 정의된 시스템 변수들은 다음의 링크들을 참고한다.\nhttps://support.atlassian.com/cloud-automation/docs/what-are-smart-values/\n이렇게 Rule 생성이 끝났다면 실제로 Jira Release를 진행해본다.\n2. 최종\nJira의 Release 페이지로 이동한뒤,\n이번 배포에 해당하는 내용들을 Release 해보면?\n다음과 같이 지정된 포맷대로 Jira 티켓들이 Slack 메세지에 정리되어 공유된다.\n3. 마무리\n여기까지 되었다면, 이후에 본인의 CI환경에 따라 배포가 완료되면 자동으로 Jira Release가 되도록하는것도 이어서 할 수 있다.\nJira version Update API\n이 부분은 각자가 사용하는 CI 환경에 따라 많은 차이가 있어서 (까나리배포를 한다던가, 사용하는 도구가 Jenkins / CircleCI / Github Action 등이라던가) 개별적으로 구현한다.\n            \n반응형\n\n                    \n                    (adsbygoogle = window.adsbygoogle || []).push({});",
          "link": "https://jojoldu.tistory.com/670",
          "publishedOn": "2022-05-02T04:12:39.000Z",
          "wordCount": 480,
          "title": "Jira Release 발생시 Slack에 Release Notes 발행하기",
          "imageUrl": "https://img1.daumcdn.net/thumb/R800x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcAgGNa%2FbtrA3rHRvlc%2F7KkC5cvXbRpWF2YKvkQnU1%2Fimg.png"
        },
        {
          "id": "https://jojoldu.tistory.com/669",
          "author": "향로",
          "description": "반응형\n\n                    \n                    (adsbygoogle = window.adsbygoogle || []).push({}); \n               \n\nWebStorm에서 기본적으로는 TypeScript 파일만 단독으로 실행할 수는 없다.\n단독으로 실행이 필요할 경우 JS 파일로 컴파일 후, 실행해야만 한다.\nRun server-side TypeScript with Node.js\n이 과정이 개발의 흐름을 많이 끊기 때문에 일반적인 JavaScript 파일을 실행하듯이 TypeScript 실행 환경이 필요하다.\n개선\nTypeScript 파일만 단독으로 수행하기 개별 플러그인만 설치하면 가능하다.\nRun Configuration for TypeScript\n해당 플러그인 설치후, 프로젝트에 ts-node 를 설치한다.\nyarn add --dev ts-node\n그리고 TS 파일을 다시 한번 우클릭 해보면? \n다음과 같이 Run/Debug 실행 버튼이 생성된 것을 확인할 수 있다.\n해당 버튼을 클릭해 실제로 수행해본다. \n그럼 다음과 같이 정상적으로 TS 파일이 컴파일 되어 실행되는 것을 확인할 수 있다.\n            \n반응형\n\n                    \n                    (adsbygoogle = window.adsbygoogle || []).push({});",
          "link": "https://jojoldu.tistory.com/669",
          "publishedOn": "2022-04-26T00:13:18.000Z",
          "wordCount": 266,
          "title": "WebStorm에서 TypeScript 파일 단독으로 실행하기",
          "imageUrl": "https://img1.daumcdn.net/thumb/R800x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbFWsNN%2FbtrAvGrDcFL%2FD0X92CK9xgOtMM6NhsZiB0%2Fimg.png"
        },
        {
          "id": "https://jojoldu.tistory.com/668",
          "author": "향로",
          "description": "반응형\n\n                    \n                    (adsbygoogle = window.adsbygoogle || []).push({}); \n               \n\n최근에 상권님의 포스팅을 보고나서 기존 프로젝트의 배포에 대한 추가 자동화를 진행했다.\n앱 배포후 Jira에서 버전 Release처리 자동으로 하는 방법(feat. GitHub Action)\n상권님의 포스팅에서는 다음과 같이 Github Action 의 자동화를 구성하셨다.\nMaster 브랜치에서 Push가 발생하면\n\nPR Merge 가 되어도 Master 에서는 Push가 발동된다\nMerge Commit으로 발생한 커밋 메세지에서 버저닝 번호만 추출해서 Tag로 생성\n반면에 우리 프로젝트는 release 브랜치의 반영이 다음과 같이 진행된다.\n그래서 그대로 적용할수는 없었고, 우리팀 스타일에 맞게 개조가 필요했다.\nmaaster Push가 아니라 PR이 merge가 되었을때만 Github Action이 작동하기\n\n상권님의 Github Action에서는 master Push에서는 전부 Action이 실행 된다.\n현재 우리팀의 규칙에서는 모든 Push 를 실행 기준으로 삼지 않았다.\nrelease 브랜치명에서 버전 추출하기\n\nrelease -> master로 반영할때 Merge Commit을 생성하지 않는다.\n그래서 Merge Commit Message에서 버전을 추출할 수가 없다.\n(-ff 로 merge 를 진행하며, merge commit 을 남기진 않는다.)\n그래서 크게 2가지 다른 점이 있기 때문에 이…",
          "link": "https://jojoldu.tistory.com/668",
          "publishedOn": "2022-04-23T07:56:36.000Z",
          "wordCount": 708,
          "title": "release 브랜치 merge시 Tag 생성, 브랜치 삭제하기 (feat. Gihtub Action)",
          "imageUrl": "https://img1.daumcdn.net/thumb/R800x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbqPhKH%2FbtrAc5T65Vp%2F40jgPCk9pxnmqrLPpW66KK%2Fimg.png"
        },
        {
          "id": "https://jojoldu.tistory.com/667",
          "author": "향로",
          "description": "반응형\n\n                    \n                    (adsbygoogle = window.adsbygoogle || []).push({}); \n               \n\n제일 싫어하는 개발자의 유형 중 하나가, \n개발자가 일을 잘하기 위해서 하나부터 열까지 기획자가 다 챙겨야 한다고 생각하는 분들이다.\n\"A ~ Z까지 엣지케이스, 예외 상황 하나도 빠짐없이 다 기획서에 넣어주세요\"\n\"아 그건 기획서에 없었으니깐 당연히 안했죠\"\n\"그거 자주 잊어먹으니깐 A, B, C에 문서화 해주세요\"\n등등 엄청 많다.\n이걸 병적으로 싫어한다. \n엔지니어외 다른 직무는 엔지니어의 서포트 조직이 아니다.\n그래서 팀에 합류하고나서 공들였던 작업중 하나가 엔지니어들의 문서화/커뮤니케이션 문화 개선이였다.\n초기 스타트업의 엔지니어분들은 커뮤니케이션/문서화의 세심함이 정말 부족하다.\n엔지니어들의 리소스가 절대적으로 부족한 시기이다보니, \n최대한 엔지니어분들의 리소스를 아끼기 위해 엔지니어가 아닌 분들이 정말 많은 서포트를 하게 된다.\n개발 용어가 남발한 이야기를 하면 그걸 어떻게든 이해하려고 개인적으로 공부를 하거나\n엔지니어가 아닌 분들께 혹시 이것 아는지 물어보거나\n엔지니어가 하지 않는 문서화를 대신 하거나\n엔지니어가 무지성(?) 개발 할 수 있도록 A-Z까지 예외상황, 엣지케이스 전부를 찾아서 기획문서로 만드는 등등.\n엔지니어가 개발/구현에만 집중할 수 있도록 하는 동안, \n엔지니어들의 성의 없는 문서화, 커뮤니케이션의 정리는 주변 동료들의 몫이 된다. \n그리고 엔지니어들의 협업을 위한 세심함도 점점 잃게 된다.\n엔지니어가 아닌 분들을 위한 문서화와 커뮤니케이션에 신경을 써야하는 이유는 \"우리가 일을 잘하기 위해서\" 다.\n기획/PO/PM 혹은 그 외 엔지니어가 아닌 직무분들이 개발 용어를 열심히 공부하는 것을 썩 좋아하진 않는다. \n엔지니어가 조금만 더 배려하면 회사 전체의 생산성이 올라간다. \n엔지니어의 생산성만이 가장 중요한 자원은 아니다.\n입사한지 1주년이 되었다. \n어제 슬랙에 나온 대화를 보다가 벌써 이만큼 왔다는 생각을 했다.\n좋은 코드, 좋은 개발문화 등등 전문성에 대한 개선을 하는 만큼, \n문서화/커뮤니케이션 문화도 점점 정착되는 것 같아서 너무 기분 좋은 주말이다.\n            \n반응형\n\n                    \n                    (adsbygoogle = window.adsbygoogle || []).push({});",
          "link": "https://jojoldu.tistory.com/667",
          "publishedOn": "2022-04-23T05:04:10.000Z",
          "wordCount": 382,
          "title": "엔지니어의 세심함",
          "imageUrl": "https://img1.daumcdn.net/thumb/R800x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FtgtfY%2FbtrAb8Kf2KS%2FdM4Z0oL7WAvdLB2BXlMF60%2Fimg.jpg"
        },
        {
          "id": "https://jojoldu.tistory.com/666",
          "author": "향로",
          "description": "반응형\n\n                    \n                    (adsbygoogle = window.adsbygoogle || []).push({}); \n               \n\n최근에 AWS의 서울/도쿄 리전에서 CloudFront 장애가 발생했다.\n(착한 트위터의 세계에서는 실시간으로 공유가 된다)\nEC2, RDS, ElasticCache에 비해 CloudFront는 모니터링을 잘 안하게 되는데, 장애가 발생하면 서비스 전체에 직격타가 된다.\n대부분의 정적 파일 (이미지 등)이 CloudFront를 통한 CDN으로 전달이 되기 때문이다.\n그래서 CloudFront가 평소보다 응답이 늦거나 에러 발생율이 높을때를 알 수 있게 모니터링할 필요가 있다.\n여기서는 바로 적용할 수 있는 CloudWatch로 모니터링 하는 방법을 소개하지만, 만약 Datadog 같이 전문적인 APM 도구를 사용하고 있다면 APM을 통해 CloudFront를 모니터링하고 알람을 거는 것이 장기적인 관점에서 훨씬 좋다.\nDatadog & CloudFront integrations\n1. CloudFront 설정\nCloudFront의 메트릭 지표를 CloudWatch로 바로 설정하면 좋겠지만, 일부 주요 지표들은 별도의 설정이 되어야만 수집이 가능하다.\n추가 설정으로 수집 가능한 지표는 다음과 같다.\n캐시 적중율 (Cache Hit Rate)\n지연시간 (Origin Latency)\nStatus별 오류 비율 (Error Rate by status code)\n(AWS 공식 문서)\n위 지표들 역시 TotalErrorRate 와 더불어 CF 모니터링에 주요하기 때문에 지표 활성화를 꼭 하면 좋다.\n설정 방법은 다음과 같다.\n원격 측정 -> 모니터링 -> 배포 -> 배포 지표 보기\nCloudFront의 원격측정 -> 모니터링으로 이동후, 원하는 ID를 선택후 배포 지표 보기버튼을 클릭한다.\n모니터링 개요를 보면 우측 상단에 추가 지표 활성화 버튼을 클릭한다.\n기본값이 사용중지이기 때문에 활성화를 선택후 지표 활성화 버튼을 클릭한다.\n이렇게 하면 이제 캐시 히트율, 레이턴시등 여러 지표들을 CloudWatch로 수집할 수 있게 된다.\n2. CloudWatch 설정\n위와 같이 설정이 끝나면 이제 CloudWatch 대시보드에서 추가 지표들을 모니터링할 수 있게 된다.\nTotalErrorRate의 경우엔 추가 지표 항목은 아니지만 모든 에러들의 비율을 확인할 수 있기 때문에 대시 보드상에서 추가해놓으면 좋다.\n수집 가능한 지표들은 CloudWatch의 경보를 통해 이상지표, 특정 수치 이상으로 튈 경우 Slack 알람 발송이 가능하다.\n예를 들어 TotalErrorRate에 대해 Slack 알람발송을 하고 싶다면,\nCloudWatch -> 경보 -> 모든 경보 -> 경보생성\n으로 들어가 본인이 원하는 이상 수치로 설정해서 알림을 발송할 수 있다.\nErrorRate의 경우 이상 탐지로 해도 괜찮으나, 서비스에 따라 너무 들쑥날쑥한 지표가 된다면 차라리 특정 수치 이상일 경우 알람이 가도록 하는것도 좋다.\n여기서는 10%이상일 경우로 지정했다.\n그리고 정상 -> 경보, 경보 -> 정상일 경우 Slack 알람이 가도록 구성한다.\n(테스트용도로 0%일 경우 발송이 되는지 진행했을때의 슬랙 알람이다.)\nCloudWatch 경보 & SNS & Lambda를 통한 Slack 알람 발송의 자세한 구성 방법은 이전에 작성된 포스팅을 참고한다.\n            \n반응형\n\n                    \n                    (adsbygoogle = window.adsbygoogle || []).push({});",
          "link": "https://jojoldu.tistory.com/666",
          "publishedOn": "2022-04-17T04:59:13.000Z",
          "wordCount": 500,
          "title": "CloudFront 모니터링 하기",
          "imageUrl": "https://img1.daumcdn.net/thumb/R800x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdefD5k%2Fbtrzx9QV9P0%2FjdIPImt7egfwWdl4VQxsTK%2Fimg.jpg"
        },
        {
          "id": "https://jojoldu.tistory.com/665",
          "author": "향로",
          "description": "반응형\n\n                    \n                    (adsbygoogle = window.adsbygoogle || []).push({}); \n               \n\n지난 시간에 프로젝트와 SonarCloud 연동을 했습니다. \n이번 시간에는 프로젝트와 연결된 SonarCloud를 개발환경인 WebStorm의 SonarLint 플러그인과 연동해서 IDE로 개발 중에도 SonarCloud 검증이 되도록 설정해보겠습니다.\n1. 설정\n먼저 SonarLint 플러그인을 설치합니다.\n설치된 SonarLint 플러그인의 설정을 열어봅니다. \n아래와 같이 Action 검색 (CMD + Shift + A) 을 통해 검색합니다.\n다음과 같이 커넥션 연결 화면이 나온다면 Configure the connection 을 선택합니다.\nSonarQube / SonarCloud connections의 + 버튼을 클리해서 새로운 커넥션을 추가합니다.\n여기서는 SonarCloud를 쓰고 있으니 SonarCloud를 선택합니다.\nNext로 넘어가면 Token 입력창이 등장합니다. \n해당 Token 발급을 위해 다시 SonarCloud 로 넘어갑니다. \nSonarCloud의 (우측상단) Profile -> My Account로 차례로 이동합니다.\nSecurity 탭을 보면 Token을 생성할 수 있습니다. \n해당 페이지에서 Token을 생성한 뒤,\nIDE Connection 입력창에서 Token을 등록합니다.\n그럼 다음과 같이 SonarCloud의 Organization 항목이 나오는데 이를 선택합니다.\n그럼 Connection은 완료되었고, 남은 것은 Project key 입니다. \nProject key는 Information -> Project Key, Organization Key 에서 확인할 수 있습니다.\n그럼 다음과 같이 설정이 마무리됩니다.\n2. 마무리\n이렇게 설정이 끝나면 이제 SonarCloud(혹은 SoncarQube) 가 잡아주는 여러 규칙들을 IDE에서도 만날 수 있습니다.\n위 Sonar 규칙은 SonarCloud(혹은 SoncarQube)와 동일한 것을 확인할 수 있습니다.\n            \n반응형\n\n                    \n                    (adsbygoogle = window.adsbygoogle || []).push({});",
          "link": "https://jojoldu.tistory.com/665",
          "publishedOn": "2022-04-14T01:35:12.000Z",
          "wordCount": 336,
          "title": "SonarLint와 SonarCloud 연동하기 (WebStorm Plugin)",
          "imageUrl": "https://img1.daumcdn.net/thumb/R800x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcW9GuD%2FbtrzjY2nAWV%2Fx6KxxJyIlM6QpGLb20qnp0%2Fimg.png"
        },
        {
          "id": "https://jojoldu.tistory.com/664",
          "author": "향로",
          "description": "반응형\n\n                    \n                    (adsbygoogle = window.adsbygoogle || []).push({}); \n               \n\nJest로 테스트 코드를 작성하다보면 습관적으로 IDE의 자동완성으로 toBeFalsy 와 toBeTruthy 를 사용하곤 했다.\n저 둘이 아닌 toBe(false) 와 toBe(true) 는 한 번의 자동완성으로 안되기 때문에 굳이 사용하진 않았다.\n그러다 팀 분의 의견을 받고 더이상 toBeFalsy() 는 사용하진 않고 있다.\n물론 이에 맞는 쓰임새가 있겠지만, 모든 결과를 강타입으로 처리하는걸 선호하는 입장에서는 toBeFalsy() 는 선호하기가 어렵다.\n다음과 같은 이유 때문이다.\ntoBeFalsy() 는 JS에서 false로 판단되는 모든 값들을 기준으로 한다\n내가 의도한것은 boolean 타입의 false 를 원했지만, 수행 결과가 0, undefined, null, '' 이면 toBeFalsy() 는 통과한다\nit('falsy로 검증하면 0도 통과된다', () => {\n  const result = calculate(); // result가 0임에도\n\n  expect(result).toBeFalsy();\n});\n\n실제로 다음과 같이 테스트 코드를 작성해서 테스트를 해보면 모든 값들이 통과한다\nit.each([\n  [0],\n  [''],\n  [false],\n  [undefined],\n  [null],\n])(\"calculate 결과가 %s이면 toBeFalsy 를 통과한다\", (calculateResult) => {\n  const result = calculate(calculateResult);\n\n  expect(result).toBeFalsy();\n});\n\n그래서 정확하게 boolean:false를 기대한다면 toBe(false) 로 검증해야만 한다.\nit('toBe(false)로 검증하면 0은 통과되지 못한다', () => {\n  const result = calculate(0);\n\n  expect(result).toBe(false);\n});\n\n테스트 코드는 두루뭉실하게 이것도 되고, 저것도 통과되도록 하는 것이 목표는 아니다. \n원하는 결과가 명확하다면 그에 맞게 검증문 작성이 필요하다.\n            \n반응형\n\n                    \n                    (adsbygoogle = window.adsbygoogle || []).push({});",
          "link": "https://jojoldu.tistory.com/664",
          "publishedOn": "2022-04-12T23:39:12.000Z",
          "wordCount": 339,
          "title": "expect에서 false와 falsy 구분하기",
          "imageUrl": "https://img1.daumcdn.net/thumb/R800x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdvHRaH%2Fbtrzgh76INX%2FkcMBLlTtKDRUB2eo6BYzTK%2Fimg.png"
        },
        {
          "id": "https://jojoldu.tistory.com/663",
          "author": "향로",
          "description": "반응형\n\n                    \n                    (adsbygoogle = window.adsbygoogle || []).push({}); \n               \n\n간혹 코드를 보면 expect 에서 비교를 하는 코드를 보곤 한다. \n이를테면 다음과 같은 경우이다.\nit('getCount의 결과는 5보다 크다', () => {\n    const result = getCount();\n\n    expect(result > 5).toBe(true);\n});\n당장 봐서는 문제가 없어보인다. \n오히려 비교값이 더 큰지 검증하는 jest 함수를 별도로 찾아보지 않아도 된다는 장점도 있어보인다.\n비슷한 예제로 다음과 같은 코드도 종종 보게 된다.\nit('getCount의 값은 10과 동일하다', () => {\n    const count = getCount();\n\n    expect(count === 10).toBe(true);\n});\n하지만 이 테스트 코드들은 크게 2개의 단점을 갖고 있다. \n(정확히는 잘못된 assertion 을 사용하고 있다.)\n첫번째는 실패할 경우 실패 원인을 찾기가 어렵다.\n이를테면 아래의 코드로 실패할 경우\nit('getCount의 값은 10과 동일하다', () => {\n    const count = getCount();\n\n    expect(count === 10).toBe(true);\n});\n결과는 다음과 같이 출력된다.\n검증 대상이 count === 10 의 결과인 true 혹은 false 이기 때문에, 실패시 출력되는 실제 받은 값(Received) 역시 true/false 만 나오게 된다.\n테스트가 실패했지만 getCount의 결과는 어디서도 확인할 수 없게 된다.\n반면에 다음과 같이 테스트 코드를 작성한다면\nit('getCount의 값은 10이다', () => {\n    const count = getCount();\n\n    expect(count).toBe(10);\n});\n검증 대상이 getCount() 이기 때문에 실패시 실제 받은 값(Received)을 쉽게 확인할 수 있다.\n테스트 코드는 언제든지 실패할 수 있기 때문에 실패시 얼마나 빨리 원인을 찾을 수 있냐는 굉장히 중요하다. \n이게 갖춰지지 않으면 테스트 코드 수정하는데 대부분의 시간을 보내게 된다.\n또 하나의 단점은 사람의 언어로 코드가 작성되지 않는다는 점이다.\n이건 사람마다 크게 체감하는 바가 다른것 같다.\n이를테면 첫번째 코드와 두번째 코드를 사람의 언어로 설명하면 다음과 같다.\nexpect(result === 10).toBe(true)\n\ngetCount의 결과가 10인 것은 참이다.\nexpect(getCount()).toBe(10)\n\ngetCount의 결과는 10이다.\n둘의 코드를 사람의 언어로 치환해보면 첫번째 코드가 얼마나 어색한지 체감된다.\n테스트 코드는 구현 코드 보다 훨씬 더 사람의 언어를 사용해야한다고 믿고 있다. \n테스트 코드는 당장 PO나 기획자분들이 사용하는 언어 그대로 구현되어야만 코드를 해석하는 노력이 거의 없다고 생각한다. \n그리고 그런 테스트 코드가 결국 오랫동안 유지보수 되고, 프로젝트를 지킬 수 있다.\n그래서 단언문(expect/assert) 안에서는 절대 검증하지 않는 것이 좋다.\n여담이지만 비슷한 예로 Java로 한다면 다음과 같다.\n//bad\nassertTrue(a == 1)\n\n//good\nassertThat(a).is(1)\n            \n반응형\n\n                    \n                    (adsbygoogle = window.adsbygoogle || []).push({});",
          "link": "https://jojoldu.tistory.com/663",
          "publishedOn": "2022-04-09T16:17:05.000Z",
          "wordCount": 482,
          "title": "단언문 (expect/assert) 안에서 비교하지 않기",
          "imageUrl": "https://img1.daumcdn.net/thumb/R800x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FCKus4%2FbtryYoeT1KW%2FRKYzg8kkOHVdaKwXxjO5Ik%2Fimg.png"
        },
        {
          "id": "https://jojoldu.tistory.com/662",
          "author": "향로",
          "description": "반응형\n\n                    \n                    (adsbygoogle = window.adsbygoogle || []).push({}); \n               \n\n일반적으로 프로젝트의 코드 퀄리티를 올리기 위해서는 단위 테스트를 비롯해 여러가지 장치를 도입한다. \n이때 가장 가성비가 좋은 작업이 정적 코드 분석을 도입하는 것이다.\n정적 코드 분석은 코드내에서 발견할 수 있는 코드 스멜, 잠재적인 결함, 컨벤션 체크, 보안 취약점 등을 코드 레벨에서 분석해서 레포팅 해준다.\n이런 정적 코드 분석 도구에는 여러가지가 있지만, 가장 많은 사용자들이 사용하는 도구는 SonarQube(소나큐브) 이다.\n기존에는 설치형외에는 지원하지 않았지만, \n최근에는 SaaS 형태로 SonarCloud 가 출시되었다.\nGithub에 공개된 저장소에 한해서는 소나 클라우드의 전체 기능을 무료로 사용할 수 있다. \n그래서 개인 프로젝트는 SonarCloud로 편하게 연동하고, 무료로 정적 코드 분석을 받아 볼 수 있다.\n회사에서 사용한다면 SonarQube를 추천한다. \n아직까지 SonarQube 만큼의 기능이 SonarCloud에서 지원하지 못하고 있다.\nSonarCloud or SonarQube? - Guidance on Choosing One for Your Team\n그래서 이번 시간에는 이 SonarCloud와 Node.js (with. TypeScript) 프로젝트를 연동해서 정적 분석을 진행해보겠다.\n모든 코드는 Github 에 있다.\n1. SonarCloud 연동\n먼저 SonarC…",
          "link": "https://jojoldu.tistory.com/662",
          "publishedOn": "2022-04-05T12:21:24.000Z",
          "wordCount": 1143,
          "title": "SonarCloud를 통한 Node.js & Jest 프로젝트 정적 분석하기",
          "imageUrl": "https://img1.daumcdn.net/thumb/R800x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FvPwAV%2FbtryxqyRKlb%2FVZofSSmvQY0OrwXIG41S8K%2Fimg.png"
        }
      ]
    }
  ],
  "cliVersion": "1.14.4"
}